-- Initial indexed-container-literals.cabal generated by cabal init.  For 
-- further documentation, see http://haskell.org/cabal/users-guide/

name:                heterogeneous-list-literals
version:             0.2.0.0
synopsis:            Allows the use of tuples as literals for Heterogeneous collections
homepage:            https://github.com/davidm-d/heterogeneous-list-literals
license:             BSD3
license-file:        LICENSE
author:              David Millar-Durrant
maintainer:          dmillardurrant@gmail.com

-- copyright:           
category:            Data
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10
description:         
  This is an incredibly simple library, which makes writing literals for heterogeneous collections easy
  .
  If you write a function with the signature
  .
  > hList :: HLL input output => input -> HList output
  then
  .
  > a :: HList '[]
  > a = hList ()
  > 
  > b :: HList '[Bool]
  > b = hList (Only True)
  > 
  > c :: HList '[Bool, Int, Double, String]
  > c = hList (True, 24, 10.5, "Fire")
  .
  The full code is in test\/Docs.hs
  .
  This only supports literals of length up to 20, though that can be easily extended using the code generator in src\/Data\/HeterogeneousListLiterals

library
  exposed-modules:     Data.HeterogeneousListLiterals
  -- other-modules:       
  -- other-extensions:    
  build-depends:       base >=4.9 && < 4.12
                     , Only >= 0.1 && < 0.2
  hs-source-dirs:      src
  default-language:    Haskell2010

test-suite HeterogenousListLiterals-test 
            type: exitcode-stdio-1.0
            main-is: Docs.hs
            build-depends:       base, heterogeneous-list-literals
            hs-source-dirs:      test
            default-language:    Haskell2010

source-repository head
  type: git
  location: https://github.com/davidm-d/heterogeneous-list-literals