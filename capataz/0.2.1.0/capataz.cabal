cabal-version: 1.12
name: capataz
version: 0.2.1.0
license: MIT
license-file: LICENSE
copyright: Â© 2018, 2019 Roman Gonzalez and Collaborators
maintainer: open-source@roman-gonzalez.info
author: Roman Gonzalez
stability: alpha (experimental)
tested-with: ghc ==8.0.1 ghc ==8.0.2 ghc ==8.2.1 ghc ==8.6.3
homepage: https://github.com/roman/Haskell-capataz#readme
bug-reports: https://github.com/roman/Haskell-capataz/issues
synopsis: OTP-like supervision trees in Haskell
description:
    `capataz` enhances the reliability of your concurrent applications by offering
    supervision of green threads that run in your application.
    .
    Advantages over standard library:
    .
    * Links related long-living processes together under a common capataz
    supervisor, with restart/shutdown order
    .
    * Set restart strategies (Permanent, Transient, Temporary) on `IO`
    sub-routines on a granular level
    .
    * Set restart strategies on a pool of long-living worker threads (AllForOne,
    OneForOne)
    .
    * Complete telemetry on the sub-routine lifecycle of your application (start,
    error, restarts, shutdown)
category: Control, Concurrency
build-type: Simple
extra-source-files:
    README.md
    CHANGELOG.md

source-repository head
    type: git
    location: https://github.com/roman/Haskell-capataz

library
    exposed-modules:
        Capataz
        Control.Concurrent.Capataz
        Control.Concurrent.Capataz.Event
        Control.Concurrent.Capataz.Lens
        Control.Concurrent.Capataz.Internal.Core
        Control.Concurrent.Capataz.Internal.Types
        Control.Concurrent.Capataz.Internal.Types.Lens
        Control.Concurrent.Capataz.Internal.Supervisor
        Control.Concurrent.Capataz.Internal.Util
        Control.Concurrent.Capataz.Internal.Worker
    hs-source-dirs: src
    other-modules:
        Capataz.HowTo.DynamicWorker
        Control.Concurrent.Capataz.Internal.Process
        Control.Concurrent.Capataz.Util
        Paths_capataz
    default-language: Haskell2010
    ghc-options: -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates
    build-depends:
        async >=2.1.1.1 && <2.3,
        base ==4.*,
        bytestring >=0.10.8,
        pretty-show >=1.6.13,
        prettyprinter >=1.1,
        rio >=0.1.2.0,
        teardown >=0.5.0.0,
        time >=1.6.0,
        uuid >=1.3

test-suite capataz-test
    type: exitcode-stdio-1.0
    main-is: Main.hs
    hs-source-dirs: test/testsuite
    other-modules:
        Control.Concurrent.Capataz.SupervisorTest
        Control.Concurrent.CapatazTest
        Test.Util
        Paths_capataz
    default-language: Haskell2010
    ghc-options: -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates -threaded
    build-depends:
        async >=2.1.1.1 && <2.3,
        base ==4.*,
        bytestring >=0.10.8,
        capataz -any,
        pretty-show >=1.9.5,
        prettyprinter >=1.1,
        rio >=0.1.2.0,
        tasty >=1.2.2,
        tasty-hunit >=0.10.0.2,
        tasty-smallcheck >=0.8.1,
        teardown >=0.5.0.0,
        time >=1.6.0,
        uuid >=1.3
