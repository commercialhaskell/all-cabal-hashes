name: iri
version: 0.4
category: URI, URL, IRI, Network
synopsis: RFC-based resource identifier library
description:
  This library provides a universal data model for representation of URI, URL and IRI.
  It comes packed with parsing, rendering and serialisation functionality.
  It is implemented in conformance with the RFC-3986 and RFC-3987 specifications and
  is intended as a standard tool for all tasks related to resource identifiers.
homepage: https://github.com/nikita-volkov/iri
bug-reports: https://github.com/nikita-volkov/iri/issues
author: Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer: Metrix.AI Tech Team <tech@metrix.ai>
copyright: (c) 2017 Nikita Volkov
license: MIT
license-file: LICENSE
build-type: Simple
cabal-version: >=1.10

source-repository head
  type: git
  location: git://github.com/nikita-volkov/iri.git

library
  hs-source-dirs: library
  default-extensions: Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, PatternSynonyms, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language: Haskell2010
  exposed-modules:
    Iri.Rendering.Text
    Iri.Rendering.TextBuilder
    Iri.Rendering.Ptr.Poking
    Iri.Rendering.ByteString
    Iri.Parsing.ByteString
    Iri.Parsing.Attoparsec.ByteString
    Iri.Parsing.Attoparsec.Text
    Iri.Parsing.Text
    Iri.QuasiQuoter
    Iri.Data
    Iri.Optics
  other-modules:
    Iri.Rendering.Text.Internal
    Iri.Rendering.TextBuilder.Internal
    Iri.Data.Types
    Iri.Data.Functions
    Iri.Data.Instances.Lift
    Iri.Data.Instances.Show
    Iri.Data.Instances.Eq
    Iri.Data.Instances.Hashable
    Iri.Data.Instances.Ord
    Iri.Data.Instances.Generic
    Iri.Prelude
    Iri.Utf8CodePoint
    Iri.Vector
    Iri.MonadPlus
    Iri.CodePointPredicates.Core
    Iri.CodePointPredicates.Rfc3986
    Iri.CodePointPredicates.Rfc3987
    Iri.Rendering.Ptr.Poke
    Iri.PercentEncoding
    Iri.Optics.Basics
    Iri.Optics.Defs
  build-depends:
    attoparsec >=0.13 && <0.14,
    base >=4.9 && <5,
    bytestring >=0.10 && <0.11,
    contravariant >=1.4 && <2,
    hashable >=1.2 && <2,
    ip >=1.1 && <2,
    profunctors >=5.2 && <6,
    ptr >=0.16.1 && <0.17,
    punycode >=2 && <3,
    semigroups >=0.18 && <0.20,
    template-haskell >=2.9 && <3,
    text ==1.*,
    text-builder >=0.6.5 && <0.7,
    th-lift >=0.7.7 && <0.8,
    th-lift-instances >=0.1.11 && <0.2,
    unordered-containers >=0.2 && <0.3,
    vector >=0.10 && <0.13,
    vector-builder >=0.3.4 && <0.4,
    vector-instances >=3.4 && <4

test-suite test
  type: exitcode-stdio-1.0
  hs-source-dirs: test
  main-is: Main.hs
  default-extensions: Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, PatternSynonyms, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language: Haskell2010
  build-depends:
    iri,
    QuickCheck >=2.8.1 && <3,
    quickcheck-instances >=0.3.11 && <0.4,
    rerebase <2,
    tasty >=0.12 && <2,
    tasty-hunit >=0.9 && <0.11,
    tasty-quickcheck >=0.9 && <0.11
