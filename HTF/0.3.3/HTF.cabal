Name:             HTF
Version:          0.3.3
x-revision: 1
License:          LGPL
License-File:     LICENSE
Copyright:        (c) 2005-2010 Stefan Wehr
Author:           Stefan Wehr <mail@stefanwehr.de>
Maintainer:       Stefan Wehr <mail@stefanwehr.de>
Bug-Reports:      mailto:mail@stefanwehr.de
Stability:        Beta
Category:         Testing
Synopsis:         The Haskell Test Framework
Description:

    The Haskell Test Framework (/HTF/ for short) lets you define unit
    tests (<http://hunit.sourceforge.net>), QuickCheck properties
    (<http://www.cs.chalmers.se/~rjmh/QuickCheck/>), and black box
    tests in an easy and convenient way. The HTF uses a custom
    preprocessor that collects test definitions automatically.
    Furthermore, the preprocessor allows the HTF to report failing
    test cases with exact file name and line number information.

    .

    The documentation of the "Test.Framework.Tutorial" module
    provides a tutorial for the HTF.

Tested-With:      GHC==6.10.4, GHC==6.12
Build-Type:       Simple
Cabal-Version:    >= 1.6
Extra-Source-Files:
  README
  TODO

Source-Repository head
  Type:           darcs
  Location:       http://www.stefanwehr.de/darcs/HTF

Executable htfpp
  Main-Is:          HTFPP.hs
  Build-Depends:    cpphs >= 1.11,
                    haskell-src-exts >= 1.8.2 && <1.11,
                    base >= 4 && < 5
  Other-Modules:
    Test.Framework.Preprocessor
    Test.Framework.HaskellParser

Library
  Build-Depends:    HUnit >= 1.2 && < 1.3,
                    QuickCheck >= 2 && < 2.3,
                    base >= 4 && < 5,
                    random,
                    containers,
                    process,
                    directory,
                    mtl,
                    pretty
  Exposed-Modules:
    Test.Framework
    Test.Framework.HUnitWrapper
    Test.Framework.TestManager
    Test.Framework.QuickCheckWrapper
    Test.Framework.BlackBoxTest
    Test.Framework.Location
    Test.Framework.Tutorial
    Test.Framework.Pretty
  Other-Modules:
    Test.Framework.Utils
    Test.Framework.Process
