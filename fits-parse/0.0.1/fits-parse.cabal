cabal-version: >=1.10
name: fits-parse
version: 0.0.1
license: BSD2
license-file: LICENSE
copyright: Copyright (c) 2019 Zac Slade
maintainer: krakrjak@gmail.com
author: Zac Slade
homepage: https://github.com/krakrjak/fits-parse#readme
synopsis: Parse FITS files
description:
    Parse and manipulate FITS data natively in Haskell
category: Science
build-type: Simple
extra-source-files:
    docs/conf.py
    docs/examples/omnibus.rst
    docs/index.rst
    docs/make.bat
    docs/Makefile
    fits_files/nonconformant/testkeys.fits
    fits_files/nonconformant/testkeys2.fits
    fits_files/Spiral_2_30_0_300_10_0_NoGrad.fits
    README.md

flag examples
    description:
        Do you want to build the examples?
    default: False
    manual: True

library
    exposed-modules:
        Data.Fits
        Data.Fits.MegaParser
    hs-source-dirs: src
    other-modules:
        Paths_fits_parse
    default-language: Haskell2010
    build-depends:
        base >=4.7 && <5,
        binary >=0.8.6.0 && <0.9,
        bytestring >=0.10.8.2 && <0.11,
        data-default >=0.7.1.1 && <0.8,
        megaparsec >=7.0.4 && <7.1,
        parser-combinators >=1.0.1 && <1.1,
        text >=1.2.3.1 && <1.3,
        text-latin1 >=0.3.1 && <0.4

executable omnibus
    main-is: Main.hs
    hs-source-dirs: examples/omnibus
    other-modules:
        Paths_fits_parse
    default-language: Haskell2010
    build-depends:
        JuicyPixels >=3.3.3 && <3.4,
        base >=4.7 && <5,
        bytestring >=0.10.8.2 && <0.11,
        fast-logger >=2.4.13 && <2.5,
        fits-parse -any,
        optparse-applicative >=0.14.3.0 && <0.15,
        statistics >=0.15.0.0 && <0.16,
        vector >=0.12.0.2 && <0.13
    
    if flag(examples)
        buildable: True
