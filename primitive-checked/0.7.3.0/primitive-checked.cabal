cabal-version: 2.2
name: primitive-checked
version: 0.7.3.0
synopsis: primitive functions with bounds-checking
homepage: https://github.com/haskell-primitive/primitive-checked#readme
bug-reports: https://github.com/haskell-primitive/primitive-checked/issues
author: Andrew Martin
maintainer: Andrew Martin <andrew.thaddeus@gmail.com>, konsumlamm <konsumlamm@gmail.com>
copyright: 2018 Andrew Martin
license: BSD-3-Clause
license-file: LICENSE
build-type: Simple
category: Array
description:
  .
  This library is intended to be used as a drop-in replacement for
  the @primitive@ library in test environments. It adds bounds-checking
  to all functions in @primitive@ that are able to cause segfaults.
  It is not recommended to use this library in production. However,
  if you are testing a library or application you wrote that uses
  @primitive@, you can temporarily replace your @primitive@ dependency
  with @primitive-checked@, and your segfaults will become normal
  Haskell exceptions that you can hunt down with GHC's stack trace
  facilities.
  .
  The versioning for this library matches the version of @primitive@
  that is targeted. The first three numbers of the version match the
  version of @primitive@. The fourth number is used for bug fixes.
  This packages deviates slightly from the PVP in that functions
  can be added to the API with only a bump to the fourth number.

extra-source-files:
  CHANGELOG.md
  README.md

source-repository head
  type: git
  location: https://github.com/haskell-primitive/primitive-checked.git

library
  hs-source-dirs:
      src
  build-depends:
      base >= 4.9.1.0 && < 5
    , primitive == 0.7.3.*
  exposed-modules:
    Data.Primitive
    Data.Primitive.Array
    Data.Primitive.SmallArray
    Data.Primitive.ByteArray
    Data.Primitive.PrimArray
  reexported-modules:
      Control.Monad.Primitive
    , Data.Primitive.MachDeps
    , Data.Primitive.MutVar
    , Data.Primitive.MVar
    , Data.Primitive.Ptr
    , Data.Primitive.Types
  default-language: Haskell2010
  ghc-options: -Wall
