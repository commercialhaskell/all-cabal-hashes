-- Cabal file for PercentFormat

name:                percent-format
version:             0.0.2
synopsis:            simple printf-style string formatting
description:
  The @Text.PercentFormat@ library provides printf-style string formatting.  It
  provides a @%@ operator (as in Ruby or Python) and uses the old
  C-printf-style format you know and love.

homepage:            https://github.com/rudymatela/percent-format#readme
license:             BSD3
license-file:        LICENSE
author:              Rudy Matela <rudy@matela.com.br>
maintainer:          Rudy Matela <rudy@matela.com.br>
category:            Testing
build-type:          Simple
cabal-version:       1.18

extra-doc-files: README.md
               , TODO.md
extra-source-files: .gitignore
                  , Makefile
                  , mk/depend.mk
                  , mk/ghcdeps
                  , mk/haddock-i
                  , mk/All.hs
                  , mk/haskell.mk
                  , mk/Toplibs.hs
                  , mk/install-on
                  , stack.yaml
                  , test/sdist
                  , .github/workflows/build.yml
                  , bench/examples.hs
                  , bench/speculate.hs
                  , test/diff/*.out
tested-with: GHC==9.0
           , GHC==8.10
           , GHC==8.8
           , GHC==8.6
           , GHC==8.4
           , GHC==8.2
           , GHC==8.0
           , GHC==7.10
           , GHC==7.8
           , Hugs==2006.9


source-repository head
  type:            git
  location:        https://github.com/rudymatela/percent-format

source-repository this
  type:            git
  location:        https://github.com/rudymatela/percent-format
  tag:             v0.0.2

library
  exposed-modules: Text.PercentFormat
                 , Text.PercentFormat.Quotient
                 , Text.PercentFormat.Spec
                 , Text.PercentFormat.Utils
  hs-source-dirs:      src
  build-depends:       base >= 4 && < 5
  default-language:    Haskell2010

test-suite number
  type:                exitcode-stdio-1.0
  main-is:             number.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, percent-format, leancheck >= 0.9.2
  default-language:    Haskell2010

test-suite scientific
  type:                exitcode-stdio-1.0
  main-is:             scientific.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, percent-format, leancheck >= 0.9.2
  default-language:    Haskell2010

test-suite prop
  type:                exitcode-stdio-1.0
  main-is:             prop.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, percent-format, leancheck >= 0.9.2
  default-language:    Haskell2010

test-suite quotient
  type:                exitcode-stdio-1.0
  main-is:             quotient.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, percent-format, leancheck >= 0.9.2
  default-language:    Haskell2010

test-suite unit
  type:                exitcode-stdio-1.0
  main-is:             unit.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, percent-format, leancheck >= 0.9.2
  default-language:    Haskell2010

test-suite spec
  type:                exitcode-stdio-1.0
  main-is:             spec.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, percent-format, leancheck >= 0.9.2
  default-language:    Haskell2010
