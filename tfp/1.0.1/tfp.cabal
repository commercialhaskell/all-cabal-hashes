name:           tfp
version:        1.0.1
build-type:     Simple
license:        BSD3
license-file:   LICENSE
copyright:      Copyright (c) 2014 Henning Thielemann, 2008 Peter Gavin
author:         Peter Gavin, Henning Thielemann
maintainer:     haskell@henning-thielemann.de
homepage:       http://www.haskell.org/haskellwiki/Type_arithmetic
stability:      alpha
synopsis:       Type-level integers, booleans, lists using type families
description:
  TFP is an abbreviation for Type Family Programming.
  It provides implementations of type-level integers and booleans,
  and (eventually) simple type-level data structures.
  It uses type families as functions to produce new types,
  which provides an intuitive way to parameterize data types
  and functions on numerical values at compile time.
category:       Type System
tested-with:    GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.4, GHC == 8.0.1
cabal-version:  1.14
extra-source-files:
  Changes.md

source-repository head
  type:         darcs
  location:     http://hub.darcs.net/thielema/tfp/

source-repository this
  tag:          1.0.1
  type:         darcs
  location:     http://hub.darcs.net/thielema/tfp/


library {
  default-language: Haskell2010
  build-depends:
    utility-ht >=0.0.10 && <0.1,
    base >=3.0 && <5
  ghc-options: -Wall
  if impl(ghc>=8.0)
    ghc-options: -fno-warn-redundant-constraints
  hs-source-dirs: src
  exposed-modules:
    Data.SizedInt
    Data.SizedWord
    Type.Base.Proxy
    Type.Data.Bool
    Type.Data.Num
    Type.Data.Num.Unary
    Type.Data.Num.Unary.Literal
    Type.Data.Num.Unary.Proof
    Type.Data.Num.Decimal
    Type.Data.Num.Decimal.Literal
    Type.Data.Num.Decimal.Digit
    Type.Data.Num.Decimal.Digit.Proof
    Type.Data.Num.Decimal.Number
    Type.Data.Num.Decimal.Proof
    Type.Data.List
    Type.Data.Ord
}


test-suite tfp-test {
  type: exitcode-stdio-1.0
  build-depends:
    tfp,
    QuickCheck >= 1.2.0.0,
    base
  default-language: Haskell2010
  ghc-options: -Wall
  main-is: Test.hs
  hs-source-dirs: test
}
