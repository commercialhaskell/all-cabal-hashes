name:                limp
version:             0.3.2.3
synopsis:            representation of Integer Linear Programs
description:         This package provides two representations for linear programs: "Numeric.Limp.Program", which is what I expect end-users to use, and
                     "Numeric.Limp.Canon", which is simpler, but would be less nice for writing linear programs.
                     You can convert programs from the Program representation to the Canon representation using "Numeric.Limp.Canon.Convert", and then pretty-print the program using "Numeric.Limp.Canon.Pretty".

                     There is a very simple branch-and-bound solver in "Numeric.Limp.Solve.Branch.Simple", and a simplex solver for relaxed (real only) programs in "Numeric.Limp.Solve.Simplex.Maps".
                     See the limp-cbc package for a simple external solver.

license:             MIT
license-file:        LICENSE
author:              Amos Robinson
maintainer:          amos.robinson@gmail.com
category:            Numeric
build-type:          Simple
cabal-version:       >=1.10
homepage:            https://github.com/amosr/limp
extra-source-files:  README.md changelog


source-repository head
    type: git
    location: git://github.com/amosr/limp.git

library
  hs-source-dirs: src
  exposed-modules:
        Numeric.Limp.Rep
        Numeric.Limp.Rep.Rep
        Numeric.Limp.Rep.Arbitrary
        Numeric.Limp.Rep.IntDouble
        Numeric.Limp.Error

        Numeric.Limp.Program.Bounds
        Numeric.Limp.Program.Constraint
        Numeric.Limp.Program.Eval
        Numeric.Limp.Program.Linear
        Numeric.Limp.Program.Program
        Numeric.Limp.Program.ResultKind
        Numeric.Limp.Program

        Numeric.Limp.Canon.Linear
        Numeric.Limp.Canon.Constraint
        Numeric.Limp.Canon.Convert
        Numeric.Limp.Canon.Program
        Numeric.Limp.Canon.Pretty
        Numeric.Limp.Canon
        Numeric.Limp.Canon.Analyse.Constants
        Numeric.Limp.Canon.Simplify.Bounder
        Numeric.Limp.Canon.Simplify.Crunch
        Numeric.Limp.Canon.Simplify.Subst
        Numeric.Limp.Canon.Simplify

        Numeric.Limp.Solve.Simplex.StandardForm
        Numeric.Limp.Solve.Simplex.Maps
        Numeric.Limp.Solve.Branch.Simple

  build-depends:
        base        >= 4.9 && < 5,
        containers  >= 0.5 && < 0.7

  ghc-options: -Wall -fno-warn-orphans
  default-language: Haskell2010
  default-extensions:       TemplateHaskell TypeFamilies FlexibleContexts GeneralizedNewtypeDeriving DataKinds GADTs RankNTypes StandaloneDeriving FlexibleInstances


test-suite test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: tests
  other-modules:
        Arbitrary.Assignment
        Arbitrary.Program
        Arbitrary.Var
        BranchExample
        Convert
        SimplexExample
        Simplexs
        Simplify
  build-depends:
        base        < 5,
        containers  >= 0.5 && < 0.7,
        tasty,
        tasty-th    == 0.1.*,
        tasty-quickcheck >= 0.8,
        QuickCheck,
        limp

  default-language: Haskell2010
  default-extensions:       TemplateHaskell TypeFamilies FlexibleContexts GeneralizedNewtypeDeriving DataKinds GADTs RankNTypes StandaloneDeriving FlexibleInstances
