name:                classyplate
version:             0.3.2.0
synopsis:            Fuseable type-class based generics
description:         Defining generics that can be used efficiently on heterogenous data structures
  like syntax trees. Can access elements of multiple types at a single traversal. Non-invasive method
  don't have to change the representation to use. All boilerplate code can be generated by the supplied
  Template Haskell functions.
license:             BSD3
license-file:        LICENSE
author:              Nemeth Boldizsar
maintainer:          nboldi@elte.hu
category:            Data
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10

source-repository head
  type:     git
  location: https://github.com/nboldi/classyplate.git

library
  exposed-modules:     Data.Generics.ClassyPlate
                     , Data.Generics.ClassyPlate.Generate
                     , Data.Generics.ClassyPlate.Common
                     , Data.Generics.ClassyPlate.TypePrune
                     , Data.Generics.ClassyPlate.TH
                     , Data.Generics.ClassyPlate.Core
  build-depends:       base             >=4.10   && <4.13
                     , template-haskell >=2.12  && <2.15
  hs-source-dirs:      src
  default-language:    Haskell2010

benchmark measure
  type:             exitcode-stdio-1.0
  hs-source-dirs:   examples
  main-is:          Main.hs
  other-modules:    AutoUni, DirectUni, Example, Generate
  build-depends:    base, criterion, classyplate, parallel, uniplate
  ghc-options:      -O2
  default-language: Haskell2010