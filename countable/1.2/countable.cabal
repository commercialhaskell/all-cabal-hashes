cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.34.4.
--
-- see: https://github.com/sol/hpack

name:           countable
version:        1.2
synopsis:       Countable, Searchable, Finite, Empty classes
description:    * @class Countable@, for countable types
                .
                * @class AtLeastOneCountable@, for countable types that have at least one value
                .
                * @class InfiniteCountable@, for infinite countable types
                .
                * @class Searchable@, for types that can be searched over. This turns out to include some infinite types, see <http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/>.
                .
                * @class Finite@, for finite types
                .
                * @class Singular@, for singular (n = 1) types
                .
                * @class Empty@, for empty (n = 0) types
                .
                Some orphan instances (in their own modules):
                .
                * @(Searchable a,Eq b) => Eq (a -> b)@ / /
                .
                * @Finite t => Foldable ((->) t)@ / /
                .
                * @Finite a => Traversable ((->) a)@ / /
                .
                * @(Show a,Finite a,Show b) => Show (a -> b)@ / /
category:       Data
homepage:       https://github.com/AshleyYakeley/countable
bug-reports:    https://github.com/AshleyYakeley/countable/issues
author:         Ashley Yakeley
maintainer:     <ashley@semantic.org>
copyright:      (c) 2010-2022 Ashley Yakeley
license:        BSD-3-Clause
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    changelog.md

library
  exposed-modules:
      Data.Searchable
      Data.Countable
      Data.Singular
      Data.Empty
      Data.Function.Eq
      Data.Function.Foldable
      Data.Function.Traversable
      Data.Function.Show
  other-modules:
      Data.Expression
  hs-source-dirs:
      src
  default-extensions:
      EmptyCase
      ExistentialQuantification
  ghc-options: -Wall
  build-depends:
      base >=4.15 && <5
  default-language: Haskell2010

test-suite test
  type: exitcode-stdio-1.0
  main-is: Count.hs
  other-modules:
      Show
      TypeName
      Three
      Golden
  hs-source-dirs:
      test
  default-extensions:
      EmptyCase
      ExistentialQuantification
      GeneralizedNewtypeDeriving ScopedTypeVariables
  ghc-options: -Wall
  build-depends:
      base >=4.15 && <5
    , bytestring
    , countable
    , silently
    , tasty
    , tasty-golden
    , tasty-hunit
  default-language: Haskell2010
