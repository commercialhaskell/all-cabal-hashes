cabal-version:      2.0
name:               sweet-egison
version:            0.1.1.3
synopsis:
  Shallow embedding implementation of non-linear pattern matching

description:
  The [sweet-egison](https://hackage.haskell.org/package/sweet-egison) is a shallow embedding implementation of non-linear pattern matching with extensible and polymorphic patterns.
  In other words, this implements [Egison](https:///www.egison.org) pattern matching in Haskell by desugaring pattern expressions.
  This library provides a base of the Pattern-Match-Oriented (PMO) programming style for Haskell users at a practical level of efficiency.

bug-reports:        https://github.com/egison/sweet-egison/issues
homepage:           https://github.com/egison/sweet-egison#readme
license:            BSD3
license-file:       LICENSE
author:             coord_e
maintainer:         coord_e <me@coord-e.com>, Satoshi Egi <egi@egison.org>
copyright:          Copyright 2020 coord_e
category:           Control, Pattern
build-type:         Simple
extra-source-files:
  CHANGELOG.md
  README.md

-- see .github/workflows
tested-with:        GHC ==8.6.2 || ==8.6.5 || ==8.8.1

source-repository head
  type:     git
  location: https://github.com/egison/sweet-egison

library
  hs-source-dirs:     src
  exposed-modules:
    Control.Egison
    Control.Egison.Match
    Control.Egison.Matcher
    Control.Egison.Matcher.Collection
    Control.Egison.Matcher.Pair
    Control.Egison.QQ

  build-depends:
      backtracking                ^>=0.1
    , base                        >=4.8   && <5
    , egison-pattern-src          ^>=0.2.1
    , egison-pattern-src-th-mode  ^>=0.2.1
    , haskell-src-exts
    , haskell-src-meta
    , logict                      ^>=0.7.0
    , template-haskell
    , transformers

  ghc-options:
    -O3 -Wunused-local-binds -Wunused-imports -Wunused-matches -Wcompat
    -Widentities -Wincomplete-record-updates -Wunused-pattern-binds
    -Wincomplete-uni-patterns -Wmissing-methods -Wmissing-signatures

  default-language:   Haskell2010
  default-extensions:
    AllowAmbiguousTypes
    DataKinds
    DefaultSignatures
    DerivingStrategies
    ExplicitForAll
    FlexibleContexts
    FlexibleInstances
    GeneralizedNewtypeDeriving
    LambdaCase
    MultiParamTypeClasses
    NamedFieldPuns
    PolyKinds
    QuasiQuotes
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    TemplateHaskell
    TupleSections
    TypeFamilies
    TypeOperators

test-suite test
  type:               exitcode-stdio-1.0
  hs-source-dirs:     test
  main-is:            test.hs
  ghc-options:
    -Wall -threaded -rtsopts -with-rtsopts=-N -Wno-type-defaults

  default-language:   Haskell2010
  build-depends:
      base
    , primes
    , sweet-egison
    , tasty
    , tasty-hunit

  default-extensions:
    GADTs
    QuasiQuotes
    TemplateHaskell
    TypeApplications

  -- cabal-fmt: expand test
  other-modules:      Control.EgisonSpec
  build-tool-depends: tasty-discover:tasty-discover -any

benchmark comb2
  type:               exitcode-stdio-1.0
  hs-source-dirs:     benchmark
  main-is:            comb2.hs
  ghc-options:        -O3 -Wall -threaded -rtsopts -with-rtsopts=-N
  default-language:   Haskell2010
  build-depends:
      base
    , criterion
    , sweet-egison

  default-extensions:
    QuasiQuotes
    TemplateHaskell
    TypeApplications

benchmark perm2
  type:               exitcode-stdio-1.0
  hs-source-dirs:     benchmark
  main-is:            perm2.hs
  ghc-options:        -O3 -Wall -threaded -rtsopts -with-rtsopts=-N
  default-language:   Haskell2010
  build-depends:
      base
    , criterion
    , sweet-egison

  default-extensions:
    QuasiQuotes
    TemplateHaskell
    TypeApplications
