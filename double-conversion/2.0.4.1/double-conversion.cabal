name:           double-conversion
version:        2.0.4.1
license:        BSD3
license-file:   LICENSE
homepage:       https://github.com/Haskell-mouse/double-conversion
bug-reports:    https://github.com/Haskell-mouse/double-conversion/issues
category:       Text
author:         Bryan O'Sullivan <bos@serpentine.com>
maintainer:     Bryan O'Sullivan <bos@serpentine.com>
stability:      experimental
synopsis:       Fast conversion between single and double precision floating point and text
cabal-version:  >= 1.10
build-type:     Simple
description:
    A library that performs fast, accurate conversion between 
    floating point and text.
    .
    This library is implemented as bindings to the C++
    @double-conversion@ library written by Florian Loitsch at Google:
    <https://github.com/floitsch/double-conversion>.
    .
    Now it can convert single precision numbers, and also it can create 
    Builder, instead of bytestring or text. 
    .
    The 'Text' versions of these functions are about 30 times faster
    than the default 'show' implementation for the 'Double' type.
    .
    The 'ByteString' versions are /slower/ than the 'Text' versions;
    roughly half the speed.  (This seems to be due to the cost of
    allocating 'ByteString' values via @malloc@.)
    .
    Builder versions are slower on single value, but they are much faster on large number of values 
    (up to 50x faster on list with 20000 doubles).  
    .
    As a final note, be aware that the @bytestring-show@ package is
    about 50% slower than simply using 'show'.

extra-source-files:
    README.markdown
    benchmarks/*.cabal
    benchmarks/*.hs
    double-conversion/*.cmake.in
    double-conversion/AUTHORS
    double-conversion/CMakeLists.txt
    double-conversion/COPYING
    double-conversion/Changelog
    double-conversion/LICENSE
    double-conversion/Makefile
    double-conversion/README
    double-conversion/SConstruct
    double-conversion/src/*.cc
    double-conversion/src/*.h
    double-conversion/src/CMakeLists.txt
    double-conversion/src/SConscript
    double-conversion/test/CMakeLists.txt
    double-conversion/test/cctest/*.cc
    double-conversion/test/cctest/*.h
    double-conversion/test/cctest/CMakeLists.txt
    double-conversion/test/cctest/SConscript
    include/*.h
    tests/*.hs

flag developer
  description: operate in developer mode
  default: False
  manual: True

library
  c-sources:
    cbits/hs-double-conversion.cc
    double-conversion/src/bignum.cc
    double-conversion/src/bignum-dtoa.cc
    double-conversion/src/cached-powers.cc
    double-conversion/src/diy-fp.cc
    double-conversion/src/double-conversion.cc
    double-conversion/src/fast-dtoa.cc
    double-conversion/src/fixed-dtoa.cc
    double-conversion/src/strtod.cc

  if os(windows)
    if arch(x86_64)
      extra-libraries: stdc++-6 gcc_s_seh-1
    else
      extra-libraries: stdc++-6 gcc_s_dw2-1
  else
    if os(darwin)
      extra-libraries: c++
    else
      extra-libraries: stdc++

  include-dirs:
    double-conversion/src
    include

  exposed-modules:
    Data.Double.Conversion.Convertable
    Data.Double.Conversion.ByteString
    Data.Double.Conversion.Text

  other-modules:
    Data.Double.Conversion.Internal.FFI
    Data.Double.Conversion.Internal.ByteString
    Data.Double.Conversion.Internal.ByteStringBuilder
    Data.Double.Conversion.Internal.Text
    Data.Double.Conversion.Internal.TextBuilder

  build-depends:
    base == 4.*,
    bytestring,
    ghc-prim,
    text >= 0.11.0.8

  if flag(developer)
    ghc-options: -Werror 
    ghc-prof-options: -auto-all
  else
    cc-options: -DNDEBUG 

  ghc-options: -Wall 

  default-language: Haskell2010

test-suite tests
  type: exitcode-stdio-1.0
  hs-source-dirs: tests
  main-is: Properties.hs
  other-modules: Regressions
  ghc-options: -Wall
  build-depends:
    HUnit,
    base,
    bytestring,
    double-conversion,
    test-framework,
    test-framework-hunit,
    test-framework-quickcheck2,
    text
  default-language: Haskell2010

source-repository head
  type:     git
  location: https://github.com/Haskell-mouse/double-conversion
