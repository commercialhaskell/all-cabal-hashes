name:                finite
version:             1.4.1.2
synopsis:            Finite ranges via types
description:         A framework for capturing finite ranges with
                     types, where the sizes of the ranges are not
                     fixed statically at compile time, but instead
                     are passed at run-time via implicit parameters.
                     .
                     This is especially useful for objects of bounded
                     size, e.g. finite automata, where the number of
                     elements being part of the object, e.g. the number
                     of states, is well-defined in the context of the
                     object.
license:             MIT
license-file:        LICENSE
category:            Types
author:              Felix Klein <klein@react.uni-saarland.de>
maintainer:          Felix Klein <klein@react.uni-saarland.de>
stability:           stable
build-type:          Simple
extra-source-files:  Readme.md
cabal-version:       >=1.10

source-repository head
  type:     git
  location: https://github.com/kleinreact/finite

library

  ghc-options:
    -Wall
    -Wno-name-shadowing
    -Wno-orphans
    -fignore-asserts

  build-depends:
      base >=4.7 && <4.15
    , array >=0.5 && <0.6
    , containers >=0.5 && <0.7
    , hashable >=1.2
    , template-haskell >=2.11
    , QuickCheck

  exposed-modules:
    Finite
    Finite.TH

  other-modules:
    Finite.Class
    Finite.PowerSet
    Finite.Collection
    Finite.Type

  hs-source-dirs:
    src/lib

  default-language:
    Haskell2010

test-suite default

  ghc-options:
    -Wall
    -Wno-name-shadowing
    -Wno-orphans
    -fno-ignore-asserts

  type:
    detailed-0.9

  test-module:
    Test

  hs-source-dirs:
    src/test

  build-depends:
      base >=4.7 && <4.15
    , hashable >=1.2
    , Cabal >= 2.4
    , QuickCheck
    , finite

  default-language:
    Haskell2010
