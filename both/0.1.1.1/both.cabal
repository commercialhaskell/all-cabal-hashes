-- Initial both.cabal generated by cabal init.  For further documentation, 
-- see http://haskell.org/cabal/users-guide/

name:                both
version:             0.1.1.1
synopsis:            Like Maybe, but with a different Monoid instance.
description:
  The Monoid instance for Maybe behaves like so:
  .
  > instance Monoid a => Monoid (Maybe a) where
  >   mappend (Just x) (Just y) = Just $ x <> y
  >   mappend (Just x) Nothing  = Just x
  >   mappend Nothing  (Just y) = Just y
  >   mappend Nothing  Nothing  = Nothing
  >
  >   mempty = Nothing
  .
  Both is a newtype wrapper around Maybe providing this instance:
  .
  > instance Monoid a => Monoid (Both a) where
  >   mappend (Just x) (Just y) = Just $ x <> y
  >   mappend _ _ = Nothing
  >
  >   mempty = Just mempty

homepage:            https://github.com/barrucadu/both
bug-reports:         https://github.com/barrucadu/both/issues
license:             MIT
license-file:        LICENSE
author:              Michael Walker
maintainer:          mike@barrucadu.co.uk
-- copyright:           
category:            Data
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

source-repository head
  type:     git
  location: https://github.com/barrucadu/both.git

source-repository this
  type:     git
  location: https://github.com/barrucadu/both.git
  tag:      0.1.1.1

library
  exposed-modules:     Data.Both
  -- other-modules:       
  -- other-extensions:    
  build-depends:       base >=4.7 && <5.0
                     , semigroups >=0.16
                     , zero >=0.1 && <0.2
  -- hs-source-dirs:      
  default-language:    Haskell2010
