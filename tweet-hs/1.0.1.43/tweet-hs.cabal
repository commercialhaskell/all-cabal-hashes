cabal-version: >=1.10
name: tweet-hs
version: 1.0.1.43
license: BSD3
license-file: LICENSE
copyright: 2016-2018 Vanessa McHale
maintainer: vamchale@gmail.com
author: Vanessa McHale
stability: stable
homepage: https://github.com/vmchale/command-line-tweeter#readme
synopsis: Command-line tool for twitter
description:
    a Command Line Interface Tweeter
category: Web
build-type: Simple
extra-source-files:
    README.md
    CHANGELOG.md
    cabal.project.local
    bash/mkCompletions
    test/data

source-repository head
    type: git
    location: https://hub.darcs.net/vmchale/tweet-hs

flag llvm-fast
    description:
        Enable build with llvm backend
    default: False

flag library
    description:
        Don't build an executable
    default: False

flag development
    description:
        Enable -Werror
    default: False
    manual: True

flag parallel-gc
    description:
        Use parallel garbage collector
    default: False

library
    exposed-modules:
        Web.Tweet
        Web.Tweet.Parser.FastParser
        Web.Tweet.Parser
        Web.Tweet.Sign
        Web.Tweet.API
        Web.Tweet.Utils
    hs-source-dirs: src
    other-modules:
        Web.Tweet.Types
        Web.Tweet.Utils.Colors
        Web.Tweet.API.Internal
        Web.Tweet.Utils.API
    default-language: Haskell2010
    default-extensions: LambdaCase
    ghc-options: -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates
    build-depends:
        base >=4.11 && <5,
        http-client-tls -any,
        http-client -any,
        http-types -any,
        authenticate-oauth -any,
        megaparsec >=7.0,
        bytestring -any,
        split -any,
        microlens -any,
        unordered-containers -any,
        htoml-megaparsec >=2.1.0.0,
        data-default -any,
        text -any,
        containers -any,
        ansi-wl-pprint -any,
        composition-prelude -any,
        extra -any,
        aeson -any
    
    if flag(development)
        ghc-options: -Werror

executable tweet
    main-is: Main.hs
    hs-source-dirs: app
    other-modules:
        Paths_tweet_hs
    default-language: Haskell2010
    ghc-options: -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates
    build-depends:
        base -any,
        tweet-hs -any,
        optparse-applicative -any,
        directory -any,
        bytestring -any
    
    if flag(library)
        buildable: False
    
    if flag(llvm-fast)
        ghc-options: -fllvm -optlo-O3 -O3
    
    if flag(parallel-gc)
        ghc-options: -rtsopts -with-rtsopts=-N
    
    if flag(development)
        ghc-options: -Werror

test-suite tweeths-test
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: test
    default-language: Haskell2010
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
    build-depends:
        base -any,
        tweet-hs -any,
        hspec -any
    
    if flag(development)
        ghc-options: -Werror

benchmark tweeths-bench
    type: exitcode-stdio-1.0
    main-is: Bench.hs
    hs-source-dirs: bench
    default-language: Haskell2010
    ghc-options: -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates
    build-depends:
        base -any,
        criterion -any,
        tweet-hs -any,
        bytestring -any,
        megaparsec -any
    
    if flag(llvm-fast)
        ghc-options: -fllvm -optlo-O3 -O3
    
    if flag(development)
        ghc-options: -Werror
