name:                typelits-witnesses
version:             0.2.1.0
x-revision: 1
synopsis:            Existential witnesses, singletons, and classes for operations on GHC TypeLits
description:         Provides witnesses for 'KnownNat' and 'KnownSymbol'
                     instances for various operations on GHC TypeLits - in
                     particular, the arithmetic operations defined in
                     "GHC.TypeLits", and also for type-level lists of
                     'KnownNat' and 'KnownSymbol' instances.
                     .
                     This is useful for situations where you have
                     @'KnownNat' n@, and you want to prove to GHC
                     @'KnownNat' (n + 3)@, or @'KnownNat' (2*n + 4)@.
                     .
                     It's also useful for when you want to work with type
                     level lists of 'KnownNat' or 'KnownSymbol' instances and
                     singletons for traversing them, and be able to apply
                     analogies of 'natVal' and 'symbolVal' to lists with
                     analogies for 'SomeNat' and 'SomeSymbol'.
                     .
                     See README for more information.
homepage:            https://github.com/mstksg/typelits-witnesses
license:             MIT
license-file:        LICENSE
author:              Justin Le
maintainer:          justin@jle.im
copyright:           (c) Justin Le 2016
category:            Data
build-type:          Simple
extra-source-files:  README.md
                   , CHANGELOG.md
cabal-version:       >=1.10

source-repository head
  type:              git
  location:          git://github.com/mstksg/typelits-witnesses.git

library
  exposed-modules:     GHC.TypeLits.Witnesses
                       GHC.TypeLits.List
  -- other-modules:       
  -- other-extensions:    
  build-depends:       base >=4.7 && <4.12
                     , base-compat
                     , constraints
                     , reflection >= 2
                     , transformers
  hs-source-dirs:      src
  ghc-options:         -Wall
  default-language:    Haskell2010
