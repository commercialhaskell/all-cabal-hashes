Name: ConfigFile
Version: 1.1.0
x-revision: 1
License: LGPL
Maintainer: John Goerzen <jgoerzen@complete.org>
Author: John Goerzen
Copyright: Copyright (c) 2004-2010 John Goerzen
license-file: COPYRIGHT
extra-source-files: COPYING,
                    README,
                    Makefile,
                    testsrc/ConfigParser/test.cfg
Category: Parsing
homepage: http://software.complete.org/configfile
synopsis: Configuration file reading & writing
Description: Parser and writer for handling sectioned config files in
 Haskell.
 .
  The ConfigFile module works with configuration files in a standard
 format that is easy for the user to edit, easy for the programmer
 to work with, yet remains powerful and flexible.  It is inspired by,
 and compatible with, Python's ConfigParser module.  It uses files
 that resemble Windows .INI-style files, but with numerous
 improvements.
 .
 ConfigFile provides simple calls to both read and write config files.
 It's possible to make a config file parsable by this module,
 the Unix shell, and make.
Stability: Stable
Build-Type: Simple
Cabal-Version: >=1.2.3

Flag buildtests
  description: Build the executable to run unit tests
  default: False

Library
  build-depends: mtl <2.3

  Hs-Source-Dirs: src
  Exposed-Modules: Data.ConfigFile,
    Data.ConfigFile.Types,
    Data.ConfigFile.Parser,
    Data.ConfigFile.Monadic
  Other-Modules: Data.ConfigFile.Lexer
  Extensions: ExistentialQuantification, OverlappingInstances,
   UndecidableInstances, TypeSynonymInstances, FlexibleContexts,
   FlexibleInstances
  Build-Depends: parsec, base < 5,
                mtl, MissingH>=1.0.0, containers
  GHC-Options: -O2 -Wall

Executable runtests
  if flag(buildtests)
    Buildable: True
    Build-depends: HUnit, testpack
  else
    Buildable: False
  Main-Is: runtests.hs
  HS-Source-Dirs: testsrc, src, .
  Other-Modules: Tests, ConfigParser.Maintest, ConfigParser.Parsertest
  Extensions: ExistentialQuantification, OverlappingInstances,
    UndecidableInstances, CPP, TypeSynonymInstances, FlexibleContexts,
    FlexibleInstances
