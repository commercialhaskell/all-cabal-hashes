Name:                minitypeset-opengl
Version:             0.2.0.1
Synopsis:            Layout and render text with TrueType fonts using OpenGL 
Description:         This is a library to render text with OpenGL.
                     TrueType (and OpenType) fonts are supported; glyph rendering
                     is via @stb_truetype@. The rendered glyphs are stored in
                     OpenGL textures (built up lazily). 
                     A simple typesetting\/layouting engine is included. 
License:             BSD3
License-file:        LICENSE
Author:              Balazs Komuves
Copyright:           (c) 2018-2019 Balazs Komuves
Maintainer:          bkomuves (plus) hackage (at) gmail (dot) com
Homepage:            http://moire.be/haskell/
Stability:           Experimental
Category:            Graphics
Tested-With:         GHC == 8.0.2
Cabal-Version:       1.24
Build-Type:          Simple

extra-source-files:  example/GL.hs,
                     example/example-STIX.hs,
                     example/example-boxes.hs,
                     example/UnicodeMath.hs

source-repository head
  type:                darcs 
  location:            http://moire.be/haskell/projects/minitypeset-opengl/

--------------------------------------------------------------------------------

Library

  Build-Depends:       base >= 4 && < 5, containers >= 0.5, filepath, OpenGL >= 3, stb-truetype >= 0.1.4

  Exposed-Modules:     Graphics.Rendering.MiniTypeset
                       Graphics.Rendering.MiniTypeset.Box
                       Graphics.Rendering.MiniTypeset.Common
                       Graphics.Rendering.MiniTypeset.Document
                       Graphics.Rendering.MiniTypeset.Layout
                       Graphics.Rendering.MiniTypeset.MultiFont
                       Graphics.Rendering.MiniTypeset.FontTexture
                       Graphics.Rendering.MiniTypeset.Render

  Default-Extensions:  CPP, BangPatterns
  Other-Extensions:    ScopedTypeVariables

  Default-Language:    Haskell2010

  Hs-Source-Dirs:      src

  ghc-options:         -fwarn-tabs -fno-warn-unused-matches -fno-warn-name-shadowing -fno-warn-unused-imports

--------------------------------------------------------------------------------
    
