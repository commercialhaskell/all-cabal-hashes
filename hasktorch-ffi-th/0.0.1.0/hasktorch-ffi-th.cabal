cabal-version: 2.2
-- * * * * * * * * * * * * WARNING * * * * * * * * * * * *
-- This file has been AUTO-GENERATED by dhall-to-cabal.
--
-- Do not edit it by hand, because your changes will be over-written!
--
-- Instead, edit the source Dhall file, namely
-- 'ffi/ffi/th/hasktorch-ffi-th.dhall', and re-generate this file by running
-- 'dhall-to-cabal -- ffi/ffi/th/hasktorch-ffi-th.dhall > hasktorch-ffi-th.cabal'.
-- * * * * * * * * * * * * WARNING * * * * * * * * * * * *
name: hasktorch-ffi-th
version: 0.0.1.0
license: BSD-3-Clause
maintainer: Sam Stites <fnz@fgvgrf.vb>, Austin Huang <nhfgvau@nyhz.zvg.rqh> - cipher:ROT13
author: Hasktorch dev team
homepage: https://github.com/hasktorch/hasktorch#readme
bug-reports: https://github.com/hasktorch/hasktorch/issues
synopsis: Bindings to Torch
description:
    Torch (and THNN) FFI bindings for CPU-based tensors and neural networks in Haskell
category: Tensors, Machine Learning, AI, FFI
build-type: Simple

source-repository head
    type: git
    location: https://github.com/hasktorch/hasktorch

flag half
    description:
        build with half support
    default: False

flag lite
    description:
        only build with Double and Long support
    default: False

library
    exposed-modules:
        Torch.FFI.TH.DiskFile
        Torch.FFI.TH.File
        Torch.FFI.TH.LogAdd
        Torch.FFI.TH.MemoryFile
        Torch.FFI.TH.Random
        Torch.FFI.TH.Size
        Torch.FFI.TH.Storage
        Torch.FFI.TH.Double.Blas
        Torch.FFI.TH.Double.Storage
        Torch.FFI.TH.Double.StorageCopy
        Torch.FFI.TH.Double.Tensor
        Torch.FFI.TH.Double.TensorConv
        Torch.FFI.TH.Double.TensorCopy
        Torch.FFI.TH.Double.TensorMath
        Torch.FFI.TH.Double.TensorRandom
        Torch.FFI.TH.Double.Vector
        Torch.FFI.TH.Double.FreeTensor
        Torch.FFI.TH.Double.FreeStorage
        Torch.FFI.TH.Double.Lapack
        Torch.FFI.TH.Double.TensorLapack
        Torch.FFI.TH.Long.Blas
        Torch.FFI.TH.Long.Storage
        Torch.FFI.TH.Long.StorageCopy
        Torch.FFI.TH.Long.Tensor
        Torch.FFI.TH.Long.TensorConv
        Torch.FFI.TH.Long.TensorCopy
        Torch.FFI.TH.Long.TensorMath
        Torch.FFI.TH.Long.TensorRandom
        Torch.FFI.TH.Long.Vector
        Torch.FFI.TH.Long.FreeTensor
        Torch.FFI.TH.Long.FreeStorage
        Torch.FFI.TH.NN.Double
    build-tools: c2hs -any
    c-sources:
        cbits/finalizers.c
        cbits/expand_polyfill.c
    hs-source-dirs: src nn polyfill
    other-modules:
        Paths_hasktorch_ffi_th
    autogen-modules:
        Paths_hasktorch_ffi_th
    default-language: Haskell2010
    extra-libraries:
        ATen
    build-depends:
        base (==4.7 || >4.7) && <5,
        hasktorch-types-th (==0.0.1 || >0.0.1) && <0.0.2,
        inline-c ==0.5 || >0.5,
        text ==1.2.2 || >1.2.2
    
    if flag(half)
        cc-options: -DHALF
    else
    
    if flag(lite)
    else
        exposed-modules:
            Torch.FFI.TH.Byte.Blas
            Torch.FFI.TH.Byte.Storage
            Torch.FFI.TH.Byte.StorageCopy
            Torch.FFI.TH.Byte.Tensor
            Torch.FFI.TH.Byte.TensorConv
            Torch.FFI.TH.Byte.TensorCopy
            Torch.FFI.TH.Byte.TensorMath
            Torch.FFI.TH.Byte.TensorRandom
            Torch.FFI.TH.Byte.Vector
            Torch.FFI.TH.Byte.FreeTensor
            Torch.FFI.TH.Byte.FreeStorage
            Torch.FFI.TH.Char.Blas
            Torch.FFI.TH.Char.Storage
            Torch.FFI.TH.Char.StorageCopy
            Torch.FFI.TH.Char.Tensor
            Torch.FFI.TH.Char.TensorConv
            Torch.FFI.TH.Char.TensorCopy
            Torch.FFI.TH.Char.TensorMath
            Torch.FFI.TH.Char.TensorRandom
            Torch.FFI.TH.Char.Vector
            Torch.FFI.TH.Char.FreeTensor
            Torch.FFI.TH.Char.FreeStorage
            Torch.FFI.TH.Int.Blas
            Torch.FFI.TH.Int.Storage
            Torch.FFI.TH.Int.StorageCopy
            Torch.FFI.TH.Int.Tensor
            Torch.FFI.TH.Int.TensorConv
            Torch.FFI.TH.Int.TensorCopy
            Torch.FFI.TH.Int.TensorMath
            Torch.FFI.TH.Int.TensorRandom
            Torch.FFI.TH.Int.Vector
            Torch.FFI.TH.Int.FreeTensor
            Torch.FFI.TH.Int.FreeStorage
            Torch.FFI.TH.Short.Blas
            Torch.FFI.TH.Short.Storage
            Torch.FFI.TH.Short.StorageCopy
            Torch.FFI.TH.Short.Tensor
            Torch.FFI.TH.Short.TensorConv
            Torch.FFI.TH.Short.TensorCopy
            Torch.FFI.TH.Short.TensorMath
            Torch.FFI.TH.Short.TensorRandom
            Torch.FFI.TH.Short.Vector
            Torch.FFI.TH.Short.FreeTensor
            Torch.FFI.TH.Short.FreeStorage
            Torch.FFI.TH.Float.Blas
            Torch.FFI.TH.Float.Storage
            Torch.FFI.TH.Float.StorageCopy
            Torch.FFI.TH.Float.Tensor
            Torch.FFI.TH.Float.TensorConv
            Torch.FFI.TH.Float.TensorCopy
            Torch.FFI.TH.Float.TensorMath
            Torch.FFI.TH.Float.TensorRandom
            Torch.FFI.TH.Float.Vector
            Torch.FFI.TH.Float.FreeTensor
            Torch.FFI.TH.Float.FreeStorage
            Torch.FFI.TH.Float.Lapack
            Torch.FFI.TH.Float.TensorLapack
            Torch.FFI.TH.NN.Float

test-suite spec
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: tests
    other-modules:
        MathSpec
        TensorSpec
        NNSpec
    default-language: Haskell2010
    build-depends:
        base (==4.7 || >4.7) && <5,
        QuickCheck ==2.11 || >2.11,
        hasktorch-ffi-tests (==0.0.1 || >0.0.1) && <0.0.2,
        hasktorch-ffi-th -any,
        hasktorch-types-th (==0.0.1 || >0.0.1) && <0.0.2,
        hspec ==2.4.4 || >2.4.4,
        text ==1.2.2 || >1.2.2

