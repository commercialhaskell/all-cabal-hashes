-- Initial trivial-constraint.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                trivial-constraint
version:             0.5.1.0
synopsis:            Constraints that any type, resp. no type fulfills
description:         Since GHC 7.4, constraints are first-class: we have the constraint kind, and thus type-classes have a kind such as @* -> Constraint@.
                     .
                     These can be used as parameters to data types. They also can be combined quite nicely,
                     .
                     @
                     type NewConstraint a = (Constraint1 a, Constraint2 a)
                     @
                     .
                     however you always need to start with a plain old type class when building constraints.
                     .
                     This library provides a type class that is not really a constraint at all, so you can "start from zero" with building up a custom constraint.
                     Also its opposite (a constraint that no type can ever fulfill).
license:             GPL-3
license-file:        LICENSE
author:              Justus SagemÃ¼ller
maintainer:          jsag@hvl.no
homepage:            https://github.com/leftaroundabout/trivial-constraint
-- copyright:           
category:            Constraints
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

source-repository head
  type: git
  location: git://github.com/leftaroundabout/trivial-constraint.git

library
  exposed-modules:     Data.Constraint.Trivial
  -- other-modules:       
  -- other-extensions:    
  build-depends:       base>=4.5 && <5
  hs-source-dirs:      src
  default-language:    Haskell2010
