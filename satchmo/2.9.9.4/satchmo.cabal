cabal-version:  3.0

Name:           satchmo
Version:        2.9.9.4

Author:         Pepe Iborra, Johannes Waldmann, Alexander Bau
Maintainer:	Johannes Waldmann
Homepage:       https://github.com/jwaldmann/satchmo
Synopsis:       SAT encoding monad
description:	Encoding for boolean and integral constraints into CNF-SAT.
                The encoder is provided as a State monad
                (hence the "mo" in "satchmo").
License:        GPL-2.0-only

Category:	Logic
build-type: Simple

tested-with: GHC==8.10.7, GHC==9.0.2, GHC==9.2.4, GHC==9.4.2

source-repository head
    type: git
    location:   https://github.com/jwaldmann/satchmo

Library
    default-language: Haskell2010
    ghc-options: -funbox-strict-fields
    Build-depends:  mtl, process, containers, base == 4.*,
      array, bytestring, directory, minisat >= 0.1, async,
      -- memoize,
      hashable, transformers, lens, deepseq
    Exposed-modules:
        Satchmo.Data
        -- Satchmo.Data.Default
        -- Satchmo.Solve
        Satchmo.Boolean
        Satchmo.Counting
        Satchmo.Counting.Unary
        Satchmo.Counting.Binary
        Satchmo.Counting.Direct
        Satchmo.Code
        Satchmo.Integer
        Satchmo.Binary
        Satchmo.Binary.Op.Common
        Satchmo.Binary.Op.Times
        Satchmo.Binary.Op.Fixed
        Satchmo.Binary.Op.Flexible
        Satchmo.BinaryTwosComplement.Op.Fixed
        Satchmo.BinaryTwosComplement
        Satchmo.Unary
        Satchmo.Unary.Op.Common
        Satchmo.Unary.Op.Fixed
        Satchmo.Unary.Op.Flexible
        Satchmo.Polynomial
        Satchmo.PolynomialN
        Satchmo.PolynomialSOS
        Satchmo.Relation
        Satchmo.Relation.Data
        Satchmo.Relation.Op
        Satchmo.Relation.Prop
        Satchmo.MonadSAT
        Satchmo.SAT
        Satchmo.SAT.Tmpfile
        Satchmo.SAT.Mini
        Satchmo.SAT.External
        -- Satchmo.SAT.CNF
        -- Satchmo.SAT.BS
        -- Satchmo.SAT.Seq
        -- Satchmo.SAT.Sequence
        -- Satchmo.Simple
        -- Satchmo.SAT.Weighted
        Satchmo.Set
        Satchmo.Set.Data
        Satchmo.Set.Op
        Satchmo.Map
        Satchmo.Map.Data
        Satchmo.Array
        Satchmo.Numeric
        Satchmo.Binary.Numeric
        Satchmo.BinaryTwosComplement.Numeric
        Satchmo.Integer.Difference
        Satchmo.Polynomial.Numeric
        -- Satchmo.SMT.Exotic.Domain
        -- Satchmo.SMT.Exotic.Dict
        -- Satchmo.SMT.Exotic.Arctic
        -- Satchmo.SMT.Exotic.Arctic.Integer
        -- Satchmo.SMT.Exotic.Fuzzy
        -- Satchmo.SMT.Exotic.Tropical
        -- Satchmo.SMT.Exotic.Natural
        -- Satchmo.SMT.Exotic.Semiring.Rational
        -- Satchmo.SMT.Exotic.Semiring.Arctic
        -- Satchmo.SMT.Exotic.Semiring.Fuzzy
        -- Satchmo.SMT.Exotic.Semiring.Tropical
        -- Satchmo.SMT.Exotic.Semiring.Natural
        -- Satchmo.SMT.Exotic.Semiring.Class
        -- Satchmo.SMT.Exotic.Semiring
    Other-modules:
        Satchmo.Binary.Data
        Satchmo.BinaryTwosComplement.Data
        Satchmo.BinaryTwosComplement.Op.Common
        Satchmo.Unary.Data
        Satchmo.Integer.Data
        Satchmo.Boolean.Op
        Satchmo.Integer.Op
        Satchmo.Boolean.Data
    hs-source-dirs:     src

Test-Suite PP
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: PP.hs
  Build-Depends: base, array, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010

Test-Suite Ramsey
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: Ramsey.hs
  Build-Depends: base, array, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010
  
Test-Suite Spaceship
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: Spaceship.hs
  Build-Depends: base, array, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010
  
Test-Suite Oscillator
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: Oscillator.hs
  Build-Depends: base, array, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010

Test-Suite Moore
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: Moore.hs
  Build-Depends: base, array, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010

Test-Suite Sudoku
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: Sudoku.hs
  Build-Depends: base, array, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010

Test-Suite Hidoku
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: Hidoku.hs
  Build-Depends: base, array, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010

Test-Suite AIS
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: AIS.hs
  Build-Depends: base, array, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010

Test-Suite Langford
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: Langford.hs
  Build-Depends: base, array, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010

Test-Suite Pigeon
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: Pigeon.hs
  Build-Depends: base, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010

Test-Suite Pythagoras
  Type: exitcode-stdio-1.0
  hs-source-dirs: examples
  Main-Is: Pythagoras.hs
  Build-Depends: base, satchmo
  ghc-options: -rtsopts
  default-language: Haskell2010
