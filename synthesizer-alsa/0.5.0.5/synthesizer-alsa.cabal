Name:           synthesizer-alsa
Version:        0.5.0.5
x-revision: 1
License:        GPL
License-File:   LICENSE
Author:         Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:     Henning Thielemann <haskell@henning-thielemann.de>
Homepage:       http://www.haskell.org/haskellwiki/Synthesizer
Category:       Sound, Music
Synopsis:       Control synthesizer effects via ALSA/MIDI
Description:
  This package allows to read MIDI events
  and to convert them to control signals
  that can be used for audio effects.
  As demonstration there is a keyboard controlled music synthesizer.
Stability:      Experimental
Tested-With:    GHC==6.4.1, GHC==6.8.2, GHC==6.10.4, GHC==6.12.3
Tested-With:    GHC==7.0.4, GHC==7.2.1
Cabal-Version:  >=1.6
Build-Type:     Simple

Source-Repository this
  Tag:         0.5.0.5
  Type:        darcs
  Location:    http://code.haskell.org/synthesizer/alsa/

Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/synthesizer/alsa/

Flag splitBase
  description: Choose the new smaller, split-up base package.

Flag optimizeAdvanced
  description: Enable advanced optimizations. They slow down compilation considerably.
  default:     False

Flag buildExamples
  description: Build example executables
  default:     False

Library
  Build-Depends:
    synthesizer-midi >=0.6 && <0.7,
    synthesizer-dimensional >=0.7 && <0.9,
    synthesizer-core >=0.6 && <0.9,
    midi-alsa >=0.2 && <0.3,
    midi >=0.2 && <0.3,
    sox >=0.2.1 && <0.3,
    alsa-seq >=0.6 && <0.7,
    alsa-pcm >=0.6 && <0.7,
    alsa-core >=0.5 && <0.6,
    storablevector >=0.2.5 && <0.3,
    numeric-prelude >=0.3 && <0.5,
    non-negative >=0.1 && <0.2,
    event-list >=0.1 && <0.2,
    transformers >=0.2 && <0.6,
    utility-ht >=0.0.1 && <0.1

  If flag(splitBase)
    Build-Depends:
      random >= 1.0 && < 1.3,
      old-time >= 1.0 && < 1.2,
      base >= 3 && <5
  Else
    Build-Depends:
      base >= 1.0 && < 2

  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Extensions: CPP

  GHC-Options:    -Wall
  Hs-source-dirs: src
  Exposed-modules:
    Synthesizer.ALSA.EventList
    Synthesizer.ALSA.Storable.Play
    Synthesizer.ALSA.Dimensional.Play
    Synthesizer.ALSA.CausalIO.Process

Executable realtimesynth
  If !flag(buildExamples)
    Buildable: False
  If flag(optimizeAdvanced)
    GHC-Options: -O2 -fvia-C -optc-O2 -optc-msse3 -optc-ffast-math
  GHC-Options: -Wall -fexcess-precision -threaded
-- -ddump-simpl-stats -ddump-asm
  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Extensions: CPP
  Hs-Source-Dirs: src
  Other-modules:
    Synthesizer.ALSA.Storable.Server.Common
    Synthesizer.ALSA.Storable.Server.Test
    Synthesizer.ALSA.Storable.Server.Run
  Main-Is: Synthesizer/ALSA/Storable/Server.hs

Executable synthicate
  If !flag(buildExamples)
    Buildable: False
  If flag(optimizeAdvanced)
    GHC-Options: -O2 -fvia-C -optc-O2 -optc-ffast-math
  GHC-Options: -Wall -fexcess-precision -threaded
-- -ddump-simpl-stats
  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Extensions: CPP
  Hs-Source-Dirs: src
  Other-modules:
    Synthesizer.ALSA.Dimensional.Server.Common
    Synthesizer.ALSA.Dimensional.Server.Test
    Synthesizer.ALSA.Dimensional.Server.Run
  Main-Is: Synthesizer/ALSA/Dimensional/Server.hs
