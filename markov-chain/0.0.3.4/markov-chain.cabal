Name:             markov-chain
Version:          0.0.3.4
x-revision: 1
License:          GPL
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://code.haskell.org/~thielema/markov-chain/
Category:         Algorithms
Build-Type:       Simple
Synopsis:         Markov Chains for generating random sequences with a user definable behaviour.
Description:
   This library can be used to generate random sequences of anything
   with a behaviour that is adapted to some training data.
   Input a marketing text or a speech and
   recompose it to another arbitrary text of this sort.
   Input a dictionary of person names and create new names.
   Input a sequence of notes and get out a new melody.
   Input a set of Haskell modules and generate ...
   nice idea but the result will certainly have neither correct syntax nor types.
   I think, it's a good thing about Haskell, that you cannot fool it so easily.
   The idea is very simple:
   The algorithm analyses your input\/training data
   with respect to how likely an @a@ or @e@ follows the letters @r@ and @e@.
   Then on recomposition it chooses subsequent letters randomly
   according to the frequencies found in the training data.
   This library is well suited for /bull-shit generators/.
Tested-With:      GHC==6.4.1
Cabal-Version: >=1.6

Source-Repository this
  Tag:         0.0.3.4
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/markov-chain/

Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/markov-chain/

Flag splitBase
  description: Choose the new smaller, split-up base package.

Library
  Build-Depends:   transformers >=0.0.1 && <0.7
  If flag(splitBase)
    Build-Depends:
      random >=1.0 && <2.0,
      containers >=0.1 && <1.0,
      base >= 2 && <5
  Else
    Build-Depends: base >=1.0 && < 2

  GHC-Options:      -Wall
  Hs-Source-Dirs:   src

  Exposed-Modules:
    Data.MarkovChain
