-- Initial funflow-nix.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                funflow-nix
version:             0.1.0.0
synopsis:  Utility functions for using funflow with nix
description: This library provides functions to create flows which run commands
             in environments created by nix commands.
             It is designed to be like the docker integration but the environments
             are created by nix rather than in a container.
license:             BSD3
license-file:        LICENSE
author:              Matthew Pickering
maintainer:          matthewtpickering@gmail.com
-- copyright:
-- category:
build-type:          Simple
extra-source-files:  ChangeLog.md, README.md
cabal-version:       >=1.10
tested-with:         GHC==8.2.2

source-repository head
  type:     git
  location: https://github.com/mpickering/funflow-nix.git

flag example
  Description: Build the example executable
  Default:     False
  Manual:      True

library
  exposed-modules: Control.Funflow.External.Nix
  -- other-modules:
  -- other-extensions:
  build-depends:       base >=4.10 && < 5, funflow >= 1.4, text, path, modern-uri
  hs-source-dirs:      src
  ghc-options:         -Wall
  default-language:    Haskell2010


executable example
  if flag(example)
    buildable: True
  else
    buildable: False
  main-is:           examples/Simple.hs
  build-depends:     funflow, funflow-nix, path, path-io, modern-uri, base < 5
  ghc-options:       -Wall
  default-language:  Haskell2010

Test-suite unit-tests
  type:               exitcode-stdio-1.0
  default-language:   Haskell2010
  hs-source-dirs:     tests
  main-is:            Test.hs
  other-modules:      TestFlows
  ghc-options:        -Wall -threaded
  build-depends:      base < 5
                    , async
                    , containers
                    , data-default >= 0.7
                    , directory
                    , filepath
                    , funflow
                    , funflow-nix
                    , path
                    , path-io
                    , process
                    , random
                    , safe-exceptions
                    , tasty
                    , tasty-hunit
                    , temporary
                    , unix
                    , modern-uri
