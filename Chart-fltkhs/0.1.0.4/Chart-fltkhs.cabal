cabal-version: 2.4
name: Chart-fltkhs
version: 0.1.0.4
license: BSD-3-Clause
license-file: LICENSE
maintainer: michael.oswald@onikudaki.net
author: Michael Oswald
homepage: https://github.com/oswald2/Chart-fltkhs
synopsis: A backend for the Chart library for FLTKHS
description:
    A backend for the Chart library for FLTKHS, based on FLTKs native drawing functions.
category: Graphics
build-type: Custom

source-repository head
    type: git
    location: http://github.com/oswald2/Chart-fltkhs

custom-setup
    setup-depends: Cabal >=2.2.0.0,
                   base >=4.4,
                   filepath -any

flag fastcompile
    description:
        Turn off optimizations for faster compilation
    default: False
    manual: True

flag examples
    description:
        Also compile the examples
    default: False
    manual: True

library
    exposed-modules:
        Graphics.Rendering.Chart.Backend.FLTKHS
    hs-source-dirs: src
    default-language: Haskell2010
    other-extensions: OverloadedStrings BangPatterns

    build-depends:
        base ==4.*,
        fltkhs ==0.8.*,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        Chart >=1.9.1 && <1.10,
        operational >=0.2.3.5 && <0.3,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options:  -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:  -Wall -Wcompat -Widentities
                     -Wincomplete-record-updates -Wincomplete-uni-patterns
                     -Wredundant-constraints -Wpartial-fields -funbox-strict-fields


    if os(windows)
        ghc-options:  -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: " -optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options:  -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

executable Example1
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example1.hs
    hs-source-dirs: examples/
    default-language: Haskell2010
    ghc-options:  -threaded
    build-depends:
            base ==4.*,
            fltkhs >=0.8.0.2 && <0.9,
            text >=1.2.2.0 && <1.3,
            vector >=0.12.0.3 && <0.13,
            lens >=4.17.1 && <4.18,
            Chart >=1.9.1 && <1.10,
            colour >=2.3.5 && <2.4,
            data-default-class >=0.1.2.0 && <0.2,
            Chart-fltkhs -any

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                    -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                    "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                    "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                    "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                    "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"



executable Example2
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example2.hs
    hs-source-dirs: examples/
    other-modules:
        Prices
    default-language: Haskell2010
    ghc-options: -threaded
    build-depends:
        base ==4.*,
        fltkhs >=0.8.0.2 && <0.9,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        time >=1.8.0.2 && <1.9,
        lens >=4.17.1 && <4.18,
        Chart >=1.9.1 && <1.10,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2,
        Chart-fltkhs -any

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

executable Example3
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example3.hs
    hs-source-dirs: examples/
    other-modules:
        Prices
    default-language: Haskell2010
    ghc-options:  -threaded
    build-depends:
        base ==4.*,
        fltkhs >=0.8.0.2 && <0.9,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        time >=1.8.0.2 && <1.9,
        lens >=4.17.1 && <4.18,
        Chart >=1.9.1 && <1.10,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2,
        Chart-fltkhs -any

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

executable Example4
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example4.hs
    hs-source-dirs: examples/
    default-language: Haskell2010
    ghc-options:  -threaded
    build-depends:
        base ==4.*,
        fltkhs >=0.8.0.2 && <0.9,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        lens >=4.17.1 && <4.18,
        Chart >=1.9.1 && <1.10,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2,
        Chart-fltkhs -any,
        random ==1.1.*

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

executable Example5
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example5.hs
    hs-source-dirs: examples/
    other-modules:
        Prices
    default-language: Haskell2010
    ghc-options:  -threaded
    build-depends:
        base ==4.*,
        fltkhs >=0.8.0.2 && <0.9,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        time >=1.8.0.2 && <1.9,
        lens >=4.17.1 && <4.18,
        Chart >=1.9.1 && <1.10,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2,
        Chart-fltkhs -any

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

executable Example7
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example7.hs
    hs-source-dirs: examples/
    default-language: Haskell2010
    ghc-options:  -threaded
    build-depends:
        base ==4.*,
        fltkhs >=0.8.0.2 && <0.9,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        lens >=4.17.1 && <4.18,
        Chart >=1.9.1 && <1.10,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2,
        Chart-fltkhs -any,
        random ==1.1.*

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

executable Example8
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example8.hs
    hs-source-dirs: examples/
    other-modules:
        Prices
    default-language: Haskell2010
    ghc-options:  -threaded
    build-depends:
        base ==4.*,
        fltkhs >=0.8.0.2 && <0.9,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        time >=1.8.0.2 && <1.9,
        lens >=4.17.1 && <4.18,
        Chart >=1.9.1 && <1.10,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2,
        Chart-fltkhs -any,
        random ==1.1.*

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

executable Example11
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example11.hs
    hs-source-dirs: examples/
    default-language: Haskell2010
    ghc-options:  -threaded
    build-depends:
        base ==4.*,
        fltkhs >=0.8.0.2 && <0.9,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        time >=1.8.0.2 && <1.9,
        lens >=4.17.1 && <4.18,
        Chart >=1.9.1 && <1.10,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2,
        Chart-fltkhs -any

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

executable Example12
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example12.hs
    hs-source-dirs: examples/
    default-language: Haskell2010
    ghc-options:  -threaded
    build-depends:
        base ==4.*,
        fltkhs >=0.8.0.2 && <0.9,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        time >=1.8.0.2 && <1.9,
        lens >=4.17.1 && <4.18,
        Chart >=1.9.1 && <1.10,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2,
        Chart-fltkhs -any

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

executable Example13
    if flag(examples)
        buildable: True
    else
        buildable: False

    main-is: Example13.hs
    hs-source-dirs: examples/
    default-language: Haskell2010
    ghc-options:  -threaded
    build-depends:
        base ==4.*,
        fltkhs >=0.8.0.2 && <0.9,
        text >=1.2.2.0 && <1.3,
        vector >=0.12.0.3 && <0.13,
        time >=1.8.0.2 && <1.9,
        lens >=4.17.1 && <4.18,
        Chart >=1.9.1 && <1.10,
        colour >=2.3.5 && <2.4,
        data-default-class >=0.1.2.0 && <0.2,
        Chart-fltkhs -any

    if ((impl(ghc >=7.10) && impl(ghc <8.0)) && flag(fastcompile))
        ghc-options: -fno-specialise -fmax-simplifier-iterations=0
                     -fsimplifier-phases=0
    else
        ghc-options:

    if os(windows)
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

    if os(osx)
        ghc-options: "-optl-Wl,-lfltkc"

    if (!os(osx) && !os(windows))
        ghc-options: -pgml g++ "-optl-Wl,--allow-multiple-definition"
                     "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc"
                     "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"
