name:                extrapolate
version:             0.4.0
synopsis:            generalize counter-examples of test properties
description:
  Extrapolate is a tool able to provide generalized counter-examples of test
  properties where irrelevant sub-expressions are replaces with variables.
  .
  For the incorrect property @\\xs -> nub xs == (xs::[Int])@:
  .
  * @[0,0]@ is a counter-example;
  .
  * @x:x:_@ is a generalized counter-example.

homepage:            https://github.com/rudymatela/extrapolate#readme
license:             BSD3
license-file:        LICENSE
author:              Rudy Matela
maintainer:          Rudy Matela <rudy@matela.com.br>
category:            Testing
build-type:          Simple
cabal-version:       1.18

extra-doc-files: README.md
               , TODO.md
               , doc/extrapolate.svg
extra-source-files: .gitignore
                  , .travis.yml
                  , Makefile
                  , bench/versions
                  , bench/diff.hs
                  , bench/eq.hs
                  , bench/false.hs
                  , bench/lazy-sc/*.hs
                  , bench/lazy-sc/Makefile
                  , bench/lazy-sc/revision.txt
                  , bench/ord.hs
                  , bench/runtime/oubli/bench/*.runtime
                  , bench/runtime/oubli/eg/*.runtime
                  , bench/runtime/zero/bench/*.runtime
                  , bench/runtime/zero/eg/*.runtime
                  , bench/runtime/zero/versions
                  , bench/smartcheck/*.txt
                  , bench/smartcheck/Makefile
                  , bench/smartcheck/bin/count-cons
                  , bench/smartcheck/bin/ncons-overflow
                  , bench/smartcheck/bin/nvars-overflow
                  , bench/smartcheck/bin/sort-stats
                  , bench/smartcheck/div0-main.hs
                  , bench/smartcheck/list.hs
                  , bench/smartcheck/overflow-main.hs
                  , bench/smartcheck/parser-main.hs
                  , bench/smartcheck/sorting.hs
                  , bench/smartcheck/word-refinements.hs
                  , bench/true.hs
                  , eg/*.hs
                  , eg/xmonad/Makefile
                  , eg/xmonad/extrapolate.hs
                  , eg/xmonad/revision.txt
                  , eg/xmonad/xmonad.cabal
                  , mk/All.hs
                  , mk/Toplibs.hs
                  , mk/depend.mk
                  , mk/ghcdeps
                  , mk/haddock-i
                  , mk/haskell.mk
                  , stack.yaml
                  , stack-lts-11.yaml
                  , test/model/bench/*.out
                  , test/model/eg/*.out
                  , test/sdist
tested-with: GHC==8.6, GHC==8.4, GHC==8.2, GHC==8.0
           , GHC==7.10, GHC==7.8

source-repository head
  type:            git
  location:        https://github.com/rudymatela/extrapolate

source-repository this
  type:            git
  location:        https://github.com/rudymatela/extrapolate
  tag:             v0.4.0

library
  exposed-modules: Test.Extrapolate
                 , Test.Extrapolate.Core
                 , Test.Extrapolate.Expr
                 , Test.Extrapolate.Generalizable
                 , Test.Extrapolate.Generalizable.Derive
                 , Test.Extrapolate.Generalization
                 , Test.Extrapolate.ConditionalGeneralization
                 , Test.Extrapolate.Speculation
                 , Test.Extrapolate.Testable
                 , Test.Extrapolate.IO
                 , Test.Extrapolate.TypeBinding
                 , Test.Extrapolate.Utils
  other-extensions:    TemplateHaskell, CPP
  build-depends: base >= 4 && < 5
               , leancheck >= 0.9.1
               , template-haskell
               , speculate >= 0.4.0
               , express >= 0.1.0
  hs-source-dirs:      src
  default-language:    Haskell2010

test-suite test
  type:                exitcode-stdio-1.0
  main-is:             extrapolate.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, leancheck, express, speculate, extrapolate
  default-language:    Haskell2010

test-suite derive
  type:                exitcode-stdio-1.0
  main-is:             derive.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, leancheck, express, speculate, extrapolate
  default-language:    Haskell2010

test-suite utils
  type:                exitcode-stdio-1.0
  main-is:             utils.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, leancheck, express, speculate, extrapolate
  default-language:    Haskell2010

test-suite step-by-step
  type:                exitcode-stdio-1.0
  main-is:             step-by-step.hs
  other-modules:       Test
  hs-source-dirs:      test
  build-depends:       base >= 4 && < 5, leancheck, express, speculate, extrapolate
  default-language:    Haskell2010
