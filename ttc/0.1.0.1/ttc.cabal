name:           ttc
version:        0.1.0.1
category:       Data, Text
synopsis:       Textual Type Classes
description:
  This library provides type classes for conversion between data types and
  textual data types (strings).  Please see the README on GitHub at
  <https://github.com/ExtremaIS/ttc-haskell#readme>.

homepage:       https://github.com/ExtremaIS/ttc-haskell#readme
bug-reports:    https://github.com/ExtremaIS/ttc-haskell/issues
author:         Travis Cardwell <travis.cardwell@extrema.is>
maintainer:     Travis Cardwell <travis.cardwell@extrema.is>
copyright:      Copyright (c) 2019 Travis Cardwell
license:        MIT
license-file:   LICENSE

cabal-version:  >=1.10
build-type:     Simple
tested-with:
  GHC ==8.2.2
   || ==8.4.4
   || ==8.6.5
   || ==8.8.1

extra-source-files:
  CHANGELOG.md
  README.md

source-repository head
  type: git
  location: https://github.com/ExtremaIS/ttc-haskell.git

flag example-invalid
  description: build example-invalid
  default: False

flag example-mkvalid
  description: build example-mkvalid
  default: False

flag example-prompt
  description: build example-prompt
  default: False

flag example-uname
  description: build example-uname
  default: False

flag example-valid
  description: build example-valid
  default: False

flag examples
  description: build all buildable examples
  default: False

library
  hs-source-dirs: src
  exposed-modules:
      Data.TTC
    , Data.TTC.Instances
  build-depends:
      base >=4.7 && <5
    , bytestring >=0.10.8 && <0.11
    , template-haskell >=2.12 && <2.16
    , text >=1.2.3 && <1.3
  default-language: Haskell2010
  ghc-options: -Wall

executable example-invalid
  if flag(example-invalid)
    buildable: True
  else
    buildable: False
  hs-source-dirs: examples
  main-is: invalid.hs
  other-modules:
      CreditCard
  build-depends:
      base
    , template-haskell
    , time >=1.8 && <1.10
    , ttc
  default-language: Haskell2010
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N

executable example-mkvalid
  if flag(examples) || flag(example-mkvalid)
    buildable: True
  else
    buildable: False
  hs-source-dirs: examples
  main-is: mkvalid.hs
  other-modules:
      Duration
  build-depends:
      base
    , time >=1.8 && <1.10
    , ttc
  default-language: Haskell2010
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N

executable example-prompt
  if flag(examples) || flag(example-prompt)
    buildable: True
  else
    buildable: False
  hs-source-dirs: examples
  main-is: prompt.hs
  other-modules:
      CreditCard
  build-depends:
      base
    , template-haskell
    , time >=1.8 && <1.10
    , ttc
  default-language: Haskell2010
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N

executable example-uname
  if flag(examples) || flag(example-uname)
    buildable: True
  else
    buildable: False
  hs-source-dirs: examples
  main-is: uname.hs
  other-modules:
      Username
  build-depends:
      base
    , text
    , ttc
  default-language: Haskell2010
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N

executable example-valid
  if flag(examples) || flag(example-valid)
    buildable: True
  else
    buildable: False
  hs-source-dirs: examples
  main-is: valid.hs
  other-modules:
      CreditCard
  build-depends:
      base
    , template-haskell
    , time >=1.8 && <1.10
    , ttc
  default-language: Haskell2010
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N

test-suite ttc-test
  type: exitcode-stdio-1.0
  hs-source-dirs: test
  main-is: Spec.hs
  other-modules:
      Data.TTC.Test
    , Data.TTC.Instances.Test
  build-depends:
      base
    , bytestring
    , tasty >=1.0 && <1.3
    , tasty-hunit >=0.10 && <0.11
    , text
    , ttc
  default-language: Haskell2010
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N
