name:                ztar
version:             0.1.3
license:             BSD3
license-file:        LICENSE.md
author:              Brandon Chinn <brandonchinn178@gmail.com>
maintainer:          Brandon Chinn <brandonchinn178@gmail.com>
category:            Codec
synopsis:            Creating and extracting arbitrary archives
description:         Creating and extracting arbitrary archives.
build-type:          Simple
cabal-version:       1.18
extra-doc-files:     CHANGELOG.md, README.md

source-repository head
  type: git
  location: https://github.com/brandonchinn178/ztar.git

flag dev
  description:        Turn on development settings.
  manual:             True
  default:            False

flag typed-paths
  description:        Use the Path library
  manual:             True
  default:            False

library
  hs-source-dirs:     src
  default-language:   Haskell2010
  exposed-modules:    Codec.Archive.ZTar
                      Codec.Archive.ZTar.GZip
                      Codec.Archive.ZTar.Path
                      Codec.Archive.ZTar.Tar
                      Codec.Archive.ZTar.Zip
                      Codec.Archive.Tar
  build-depends:      base >= 4.7 && < 5
                    , bytestring >= 0.10.8 && < 0.11
                    , directory >= 1.3 && < 1.4
                    , filepath >= 1.4.1 && < 1.5
                    , path
                    -- , tar >= 0.5 && < 0.6
                    , zip >= 0.2 && < 0.3
                    , zlib >= 0.6 && < 0.7
                    -- For Codec.Archive.Tar
                    , deepseq
                    , process
                    , text
                    , unix-compat
  if flag(typed-paths)
    build-depends:    path >= 0.5 && < 0.7
    cpp-options:      -DTYPED_PATHS

  ghc-options: -Wall
  if flag(dev)
    ghc-options:      -Werror
  if flag(dev) && impl(ghc >= 8.0)
    ghc-options:      -Wcompat
                      -Wincomplete-record-updates
                      -Wincomplete-uni-patterns
                      -Wnoncanonical-monad-instances
                      -Wnoncanonical-monadfail-instances

test-suite example
  type:               exitcode-stdio-1.0
  default-language:   Haskell2010
  hs-source-dirs:     test
  main-is:            Example.hs
  other-modules:      Utilities
  build-depends:      base
                    , path
                    , path-io
                    , ztar
  if flag(typed-paths)
    cpp-options:      -DTYPED_PATHS
  ghc-options: -Wall
  if flag(dev)
    ghc-options:      -Werror
  if flag(dev) && impl(ghc >= 8.0)
    ghc-options:      -Wcompat
                      -Wincomplete-record-updates
                      -Wincomplete-uni-patterns
                      -Wnoncanonical-monad-instances
                      -Wnoncanonical-monadfail-instances

test-suite ztar-test
  type:               exitcode-stdio-1.0
  default-language:   Haskell2010
  hs-source-dirs:     test
  main-is:            Test.hs
  other-modules:      Utilities
  build-depends:      base
                    , bytestring
                    , bytestring-arbitrary
                    , extra
                    , path
                    , path-io
                    , QuickCheck
                    , tasty
                    , tasty-quickcheck
                    , ztar
  if flag(typed-paths)
    cpp-options:      -DTYPED_PATHS
  ghc-options: -Wall
  if flag(dev)
    ghc-options:      -Werror
  if flag(dev) && impl(ghc >= 8.0)
    ghc-options:      -Wcompat
                      -Wincomplete-record-updates
                      -Wincomplete-uni-patterns
                      -Wnoncanonical-monad-instances
                      -Wnoncanonical-monadfail-instances
