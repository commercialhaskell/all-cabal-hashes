Name:		finite-field
Version:	0.9.0
x-revision: 2
License:	BSD3
License-File:	COPYING
Author:		Masahiro Sakai (masahiro.sakai@gmail.com)
Maintainer:	masahiro.sakai@gmail.com
Category:	Math, Algebra, Data
Cabal-Version:	>= 1.10
Synopsis:	Finite Fields
Description:
  This is an implementation of finite fields.
  Currently only prime fields are supported.
Bug-Reports:	https://github.com/msakai/finite-field/issues
Extra-Source-Files:
   README.md
   COPYING
   CHANGELOG.markdown
   .travis.yml
   .gitignore
Build-Type: Simple

Flag UseGHCTypeLits
  Description: set GHC.TypeLits module
  Default: True
  Manual: True

source-repository head
  type:     git
  location: git://github.com/msakai/finite-field.git

Library
  Hs-source-dirs: src
  Build-Depends:
     base >=4 && <5, template-haskell, deepseq, hashable
  if flag(UseGHCTypeLits)
     Build-Depends: base >=4.7, singletons >=1.0
     CPP-OPtions: "-DUseGHCTypeLits"
  else
     Build-Depends: type-level-numbers >=0.1.1.0 && <0.2.0.0
  Default-Language: Haskell2010
  Other-Extensions:
     ConstraintKinds
     DeriveDataTypeable
     MultiParamTypeClasses
     ScopedTypeVariables
     Rank2Types
     GADTs
     TemplateHaskell
     BangPatterns
  Exposed-Modules:
     Data.FiniteField
     Data.FiniteField.Base
     Data.FiniteField.PrimeField

Test-suite TestPrimeField
  Type:              exitcode-stdio-1.0
  HS-Source-Dirs:    test
  Main-is:           TestPrimeField.hs
  Build-depends:
      base >=4 && <5,
      containers,
      deepseq,
      hashable,
      tasty >=0.10.1,
      tasty-hunit >=0.9 && <0.11,
      tasty-quickcheck >=0.8 && <0.11,
      tasty-th,
      QuickCheck >=2.5 && <3,
      finite-field,
      primes
  if flag(UseGHCTypeLits)
     Build-Depends: base >=4.7, singletons >=1.0
     CPP-OPtions: "-DUseGHCTypeLits"
  else
     Build-depends: type-level-numbers >=0.1.1.0 && <0.2.0.0
  if impl(ghc<7.7)
     Build-Depends: tagged
  Default-Language: Haskell2010
  Other-Extensions:
      TemplateHaskell
      ScopedTypeVariables
      CPP
