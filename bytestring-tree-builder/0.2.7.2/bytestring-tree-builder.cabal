name:
  bytestring-tree-builder
version:
  0.2.7.2
category:
  ByteString
synopsis:
  A very efficient ByteString builder implementation based on the binary tree
description:
  According to
  <https://github.com/nikita-volkov/bytestring-builders-benchmark the benchmarks>
  this builder implementation beats all the alternatives.
  It is especially well-suited for generating strict bytestrings,
  beating the standard builder by at least the factor of 4.
homepage:
  https://github.com/nikita-volkov/bytestring-tree-builder 
bug-reports:
  https://github.com/nikita-volkov/bytestring-tree-builder/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2015, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Simple
cabal-version:
  >=1.10


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/bytestring-tree-builder.git


library
  hs-source-dirs:
    library
  ghc-options:
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  other-modules:
    ByteString.TreeBuilder.Prelude
    ByteString.TreeBuilder.Poker
    ByteString.TreeBuilder.Tree
  exposed-modules:
    ByteString.TreeBuilder
  build-depends:
    semigroups >= 0.18 && < 0.19,
    bytestring >= 0.10 && < 0.11,
    text >= 1 && < 2,
    base-prelude < 2,
    base >= 4.6 && < 5


benchmark benchmark
  type: 
    exitcode-stdio-1.0
  hs-source-dirs:
    benchmark
  main-is:
    Main.hs
  ghc-options:
    -O2
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveTraversable, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    bytestring-tree-builder,
    -- benchmarking:
    criterion >= 1.1 && < 2,
    -- data:
    bytestring,
    -- general:
    deepseq == 1.*,
    base-prelude


test-suite tasty
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    tasty
  main-is:
    Main.hs
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    bytestring-tree-builder,
    -- testing:
    tasty >= 0.12 && < 2,
    tasty-quickcheck >= 0.9 && < 0.11,
    tasty-hunit >= 0.9 && < 0.11,
    quickcheck-instances >= 0.3.11 && < 0.4,
    QuickCheck >= 2.8.1 && < 3,
    -- data:
    bytestring,
    -- general:
    base-prelude

