name:                testbench
version:             0.2.1.3
synopsis:            Create tests and benchmarks together
description: {
Test your benchmarks!  Benchmark your tests!
.
It's too easy to accidentally try and benchmark apples and oranges
together.  Wouldn't it be nice if you could somehow guarantee that
your benchmarks satisfy some simple tests (e.g. a group of comparisons
all return the same value)?
.
Furthermore, trying to compare multiple inputs/functions against each
other requires a lot of boilerplate, making it even easier to
accidentally compare the wrong things (e.g. using `whnf` instead of
`nf`).
.
/testbench/ aims to help solve these problems and more by making it
easier to write unit tests and benchmarks together by stating up-front
what requirements are needed and then using simple functions to state
the next parameter to be tested/benchmarked.
}
license:             MIT
license-file:        LICENSE
author:              Ivan Lazar Miljenovic
maintainer:          Ivan.Miljenovic@gmail.com
-- copyright:
category:            Testing
build-type:          Simple
extra-source-files:  README.md
                   , Changelog.md
cabal-version:       >=1.10

tested-with:   GHC == 8.0.1, GHC == 8.2.2, GHC == 8.4.1,GHC == 8.6.5,
               GHC == 8.8.1

source-repository head
    type:         git
    location:     https://github.com/ivan-m/testbench.git

flag examples
     description:      Build example executable
     default:          False

library
  exposed-modules:     TestBench
  other-modules:       TestBench.Commands
                     , TestBench.Evaluate
                     , TestBench.LabelTree
                     , Paths_testbench
  build-depends:       base >= 4.8 && < 5
                     , bytestring
                     , cassava == 0.5.*
                     , criterion == 1.5.*
                     , criterion-measurement == 0.1.*
                     , dlist == 0.8.*
                     , deepseq >= 1.1.0.0 && < 1.5
                     , HUnit >= 1.1 && < 1.7
                     , optparse-applicative >= 0.11.0.0 && < 0.15
                     , process >= 1.1.0.0 && < 1.7
                     , statistics >= 0.14 && < 0.16
                     , streaming == 0.2.*
                     , streaming-cassava == 0.1.*
                     , streaming-with >= 0.1.0.0 && < 0.3
                     , temporary >= 1.1 && < 1.4
                     , transformers == 0.5.*
                     , weigh >= 0.0.4 && < 0.1
  hs-source-dirs:      src
  default-language:    Haskell2010

  ghc-options:       -Wall

executable examples
  if flag(examples)
     buildable:        True
  else
     buildable:        False

  default-language:    Haskell2010

  hs-source-dirs:      examples

  main-is:             Simple.hs

  build-depends:       testbench
                     , base
                     , bytestring
                     , containers
                     , criterion
                     , HUnit

  ghc-options:       -Wall
