Name:                dynamic-graphs
Version:             0.1.0.1
Synopsis:            Dynamic graph algorithms
Description:         A library for dynamic graph algorithms, and in particular
                     dynamic connectivity.
License:             BSD3
License-file:        LICENSE
Author:              Alex Lang, Jasper Van der Jeugt
Maintainer:          me@alang.ca
copyright:           2018 Alex Lang, Jasper Van der Jeugt
Category:            Data
Build-type:          Simple
Extra-source-files:  CHANGELOG.md, README.md
Cabal-version:       >=1.10

Flag build-extra-executables
  Description: Build the auxiliary executables, including benchmarks, tools and examples
  Default:     False
  Manual:      True

Library
  Hs-source-dirs:   src
  Default-language: Haskell2010
  Ghc-options:      -Wall

  Exposed-modules:
    Data.Graph.Dynamic.EulerTour
    Data.Graph.Dynamic.Levels

    Data.Graph.Dynamic.Internal.Avl
    Data.Graph.Dynamic.Internal.Splay
    Data.Graph.Dynamic.Internal.Random
    Data.Graph.Dynamic.Internal.Tree
    Data.Graph.Dynamic.Internal.HashTable

  Build-depends:
    base                 >= 4.8  && < 5,
    containers           >= 0.3  && < 0.7,
    hashable             >= 1.0  && < 1.3,
    hashtables           >= 1.2  && < 1.3,
    mwc-random           >= 0.12 && < 0.14,
    primitive            >= 0.5  && < 0.7,
    unordered-containers >= 0.2  && < 0.3,
    vector               >= 0.10 && < 0.13

Test-suite dynamic-graphs-tests
  Type: exitcode-stdio-1.0
  Ghc-options: -Wall
  Main-is: Suite.hs
  Hs-source-dirs: tests
  Default-language: Haskell2010

  Other-modules:
    Data.Graph.Dynamic.EulerTour.Tests
    Data.Graph.Dynamic.Internal.Avl.Tests
    Data.Graph.Dynamic.Internal.Splay.Tests
    Data.Graph.Dynamic.Internal.Random.Tests
    Data.Graph.Dynamic.Internal.Tree.Tests
    Data.Graph.Dynamic.Levels.Tests

    Data.Graph.Dynamic.Program
    Data.Graph.Dynamic.Slow
    Data.Graph.Dynamic.Action

  Build-depends:
    aeson,
    base,
    deepseq,
    dynamic-graphs,
    bytestring,
    containers,
    mwc-random,
    hashable,
    unordered-containers,
    primitive,
    text,
    QuickCheck,
    test-framework,
    test-framework-quickcheck2,
    test-framework-th

Benchmark dynamic-graphs-benchmarks
  Type: exitcode-stdio-1.0
  Main-is: bench.hs
  Hs-source-dirs: benchmarks
  Default-language: Haskell2010
  Ghc-options: -Wall -O2 -threaded -rtsopts
  Build-depends:
    dynamic-graphs,
    primitive,
    base,
    criterion

Executable dynamic-graphs-simple
  main-is: simple.hs
  hs-source-dirs: benchmarks
  default-language: Haskell2010
  ghc-options: -Wall -O2 -threaded -rtsopts

  If flag(build-extra-executables)
    buildable: True
  else
    buildable: False

  Build-depends:
    dynamic-graphs,
    base,
    deepseq,
    primitive

Executable bench-program
  Main-is: bench-program.hs
  Hs-source-dirs: benchmarks/hs tests
  Default-language: Haskell2010
  Ghc-options: -Wall -O2 -threaded -rtsopts

  If flag(build-extra-executables)
    buildable: True
  Else
    buildable: False

  Build-depends:
    base,
    containers,
    deepseq,
    criterion,
    dynamic-graphs,
    hashable,
    primitive,
    QuickCheck,
    text,
    unordered-containers

  Other-modules:
    Data.Graph.Dynamic.Program
    Data.Graph.Dynamic.Slow

Executable gen-program
  Main-is: gen-program.hs
  Hs-source-dirs: benchmarks/hs tests
  Default-language: Haskell2010
  Ghc-options: -Wall -O2 -threaded -rtsopts

  If flag(build-extra-executables)
    Buildable: True
  Else
    Buildable: False

  Build-depends:
    base,
    containers,
    deepseq,
    dynamic-graphs,
    hashable,
    primitive,
    QuickCheck,
    text,
    unordered-containers

  Other-modules:
    Data.Graph.Dynamic.Program
    Data.Graph.Dynamic.Slow
