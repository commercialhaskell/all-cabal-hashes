cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.34.4.
--
-- see: https://github.com/sol/hpack
--
-- hash: aae0fd4e94350169efa7229b1559a55e3b9d2ed3d389f607534a15403307b6b1

name:           witness
version:        0.6.1
synopsis:       values that witness types
description:    A /witness/ is a value that witnesses some sort of constraint on some list of type variables. This library provides support for a wide variety of witness types. It also provides classes for /representatives/, which are values that represent types.
category:       Data
homepage:       https://github.com/AshleyYakeley/witness
bug-reports:    https://github.com/AshleyYakeley/witness/issues
author:         Ashley Yakeley
maintainer:     <ashley@semantic.org>
copyright:      (c) 2017-2022 Ashley Yakeley
license:        BSD-2-Clause
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    changelog.md

library
  hs-source-dirs:
      src
  default-extensions:
      AllowAmbiguousTypes
      Arrows
      ConstraintKinds
      DataKinds
      DefaultSignatures
      EmptyCase
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      ForeignFunctionInterface
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      ImplicitParams
      NoImplicitPrelude
      InstanceSigs
      KindSignatures
      LambdaCase
      MultiParamTypeClasses
      OverloadedLabels
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PatternSynonyms
      PolyKinds
      QuantifiedConstraints
      RankNTypes
      RecordWildCards
      RecursiveDo
      ScopedTypeVariables
      StandaloneDeriving
      StandaloneKindSignatures
      NoStarIsType
      TemplateHaskell
      TypeApplications
      TypeFamilies
      TypeFamilyDependencies
      TypeInType
      TypeOperators
      TypeSynonymInstances
      UndecidableInstances
      UndecidableSuperClasses
      ViewPatterns
  ghc-options: -Wall -Wincomplete-uni-patterns -Wincomplete-record-updates -Wcompat -Wnoncanonical-monad-instances
  build-depends:
      base >=4.15 && <5
    , constraints >=0.13
    , containers >=0.4
    , countable >=1.2
  exposed-modules:
      Data.Type.Witness.Apply
      Data.PeanoNat
      Data.Type.Witness.General.TestHetEquality
      Data.Type.Witness.General.HetConstraint
      Data.Type.Witness.Specific.Some
      Data.Type.Witness.Specific.All
      Data.Type.Witness.General.AllConstraint
      Data.Type.Witness.General.WitnessConstraint
      Data.Type.Witness.General.WitnessValue
      Data.Type.Witness.General.ListElement
      Data.Type.Witness.Specific.Symbol
      Data.Type.Witness.General.Finite
      Data.Type.Witness.Specific.Single
      Data.Type.Witness.Specific.Pair
      Data.Type.Witness.Specific.Empty
      Data.Type.Witness.Specific.Either
      Data.Type.Witness.Specific.FiniteAllFor
      Data.Type.Witness.Specific.WitnessMap.Of
      Data.Type.Witness.Specific.WitnessMap.For
      Data.Type.Witness.Specific.OrderedWitnessMap.Of
      Data.Type.Witness.Specific.OrderedWitnessMap.For
      Data.Type.Witness.Specific.PeanoNat
      Data.Type.Witness.Specific.Natural
      Data.Type.Witness.Specific.FixedList
      Data.Type.Witness.Specific.List.Element
      Data.Type.Witness.Specific.List.List
      Data.Type.Witness.Specific.Concat
      Data.Type.Witness.Specific.ApplyStack
      Data.Type.Witness.Specific.List.Product
      Data.Type.Witness.Specific.List.Sum
      Data.Type.Witness.General.Representative
      Data.Type.Witness.General.Order
      Data.Type.Witness
  other-modules:
      Import
  default-language: Haskell2010
