cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.33.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 05878bc4862c4de5349ab302faa8396dafc84f16a102fdd267c48f3aae1e6319

name:           witness
version:        0.5
synopsis:       values that witness types
description:    A witness is a value that /witnesses/ some sort of constraint on some list of type variables. This library provides support for simple witnesses, that constrain a type variable to a single type, and equality witnesses, that constrain two type variables to be the same type. It also provides classes for representatives, which are values that represent types. See the paper /Witnesses and Open Witnesses/ (<http://semantic.org/stuff/Open-Witnesses.pdf>).
category:       Data
homepage:       https://github.com/AshleyYakeley/witness
bug-reports:    https://github.com/AshleyYakeley/witness/issues
author:         Ashley Yakeley
maintainer:     <ashley@semantic.org>
copyright:      (c) 2017-2019 Ashley Yakeley
license:        BSD3
license-file:   LICENSE
build-type:     Simple

library
  hs-source-dirs:
      src
  default-extensions: AllowAmbiguousTypes Arrows ConstraintKinds DataKinds DefaultSignatures EmptyCase EmptyDataDecls ExistentialQuantification FlexibleContexts FlexibleInstances ForeignFunctionInterface FunctionalDependencies GADTs GeneralizedNewtypeDeriving ImplicitParams NoImplicitPrelude InstanceSigs KindSignatures LambdaCase MultiParamTypeClasses OverloadedLabels OverloadedStrings PartialTypeSignatures PatternGuards PatternSynonyms PolyKinds QuantifiedConstraints RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving NoStarIsType TemplateHaskell TypeApplications TypeFamilies TypeFamilyDependencies TypeInType TypeOperators TypeSynonymInstances UndecidableInstances UndecidableSuperClasses ViewPatterns
  ghc-options: -Wall -Wincomplete-uni-patterns -Wincomplete-record-updates -Wcompat -Wnoncanonical-monad-instances
  build-depends:
      base >=4.14 && <5
    , constraints
    , countable
    , semigroupoids
    , transformers
  exposed-modules:
      Data.Type.With
      Data.Type.Apply
      Data.Type.Heterogeneous
      Data.Nat
      Control.Category.Tensor
      Data.Witness.Kind
      Data.Witness.Any
      Data.Witness.All
      Data.Witness.Constraint
      Data.Witness.WitnessValue
      Data.Witness.Symbol
      Data.Witness.Finite
      Data.Witness.Single
      Data.Witness.Cons
      Data.Witness.Either
      Data.Witness.Submap
      Data.Witness.WitnessDict
      Data.Witness.WitnessFDict
      Data.Witness.Nat
      Data.Witness.BigNat
      Data.Witness.ListElement
      Data.Witness.List
      Data.Witness.Concat
      Data.Witness.ApplyStack
      Data.Witness.HList
      Data.Witness.Representative
      Data.Witness
  other-modules:
      Paths_witness
  default-language: Haskell2010
