name:                butcher
version:             1.3.1.0
x-revision: 1
synopsis:            Chops a command or program invocation into digestable pieces.
description:         See the <https://github.com/lspitzner/butcher/blob/master/README.md README> (it is properly formatted on github).
license:             BSD3
license-file:        LICENSE
author:              Lennart Spitzner
maintainer:          Lennart Spitzner <hexagoxel@hexagoxel.de>
copyright:           Copyright (C) 2016-2018 Lennart Spitzner
category:            UI
build-type:          Simple
Stability:           experimental
extra-source-files: {
  ChangeLog.md
  srcinc/prelude.inc
  README.md
}
cabal-version:       >=1.10
homepage:            https://github.com/lspitzner/butcher/
bug-reports:         https://github.com/lspitzner/butcher/issues

source-repository head {
  type: git
  location: https://github.com/lspitzner/butcher.git
}

library
  exposed-modules:     UI.Butcher.Monadic.Types
                       UI.Butcher.Monadic
                       UI.Butcher.Monadic.Command
                       UI.Butcher.Monadic.Param
                       UI.Butcher.Monadic.Flag
                       UI.Butcher.Monadic.Pretty
                       UI.Butcher.Monadic.IO
                       UI.Butcher.Monadic.Interactive
                       UI.Butcher.Monadic.BuiltinCommands
  other-modules:       UI.Butcher.Monadic.Internal.Types
                       UI.Butcher.Monadic.Internal.Core
  build-depends:
    { base >=4.9 && <4.12
    , free < 5.1
    , unsafe < 0.1
    , microlens <0.5
    , microlens-th <0.5
    , multistate >=0.8 && <0.9
    , pretty <1.2
    , containers <0.6
    , transformers <0.6
    , mtl <2.3
    , extra <1.7
    , void <0.8
    , bifunctors <5.6
    , deque < 0.2.2
    }
  hs-source-dirs:      src
  default-language:    Haskell2010
  default-extensions: {
    CPP

    NoImplicitPrelude

    GADTs

    FlexibleContexts
    FlexibleInstances
    ScopedTypeVariables
    MonadComprehensions
    LambdaCase
    MultiWayIf
    KindSignatures
  }
  other-extensions: {
    DeriveFunctor
    ExistentialQuantification
    GeneralizedNewtypeDeriving
    StandaloneDeriving
    DataKinds
    TypeOperators
    TemplateHaskell
  }
  ghc-options: {
    -Wall
    -fno-spec-constr
    -fno-warn-unused-imports
    -fno-warn-orphans
  }
  include-dirs:
    srcinc

test-suite tests
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  build-depends:
    { base <999
    , butcher
    , free
    , unsafe
    , microlens
    , microlens-th
    , multistate
    , pretty
    , containers
    , transformers
    , mtl
    , extra
    , deque
    , hspec
    }
  ghc-options:      -Wall
  main-is:          TestMain.hs
  other-modules:    
  hs-source-dirs:   src-tests
  default-extensions: {
    CPP

    NoImplicitPrelude

    GADTs

    FlexibleContexts
    FlexibleInstances
    ScopedTypeVariables
    MonadComprehensions
    LambdaCase
    MultiWayIf
    KindSignatures
  }
  ghc-options: {
    -Wall
    -fno-spec-constr
    -fno-warn-unused-imports
    -fno-warn-orphans
  }
