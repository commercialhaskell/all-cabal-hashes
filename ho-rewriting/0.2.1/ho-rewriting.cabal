name:                ho-rewriting
version:             0.2.1
synopsis:            Generic rewrite rules with safe treatment of variables and binders
description:         This package gives a generic implementation of higher-order
                     rewriting. The main idea is to use techniques from embedded
                     domain-specific languages to offer an interface which is
                     both safe and syntactically appealing.
                     .
                     Some examples are found in the @examples@ directory. For
                     more information, see
                     \"Lightweight Higher-Order Rewriting in Haskell\" (presented at TFP 2015):
                     .
                       * Paper: <https://emilaxelsson.github.io/documents/axelsson2015lightweight.pdf>
                     .
                       * Slides: <https://emilaxelsson.github.io/documents/axelsson2015lightweight_slides.pdf>
homepage:            https://github.com/emilaxelsson/ho-rewriting
bug-reports:         https://github.com/emilaxelsson/ho-rewriting/issues
license:             BSD3
license-file:        LICENSE
author:              Emil Axelsson
maintainer:          78emil@gmail.com
copyright:           Copyright (c) 2015, Emil Axelsson
category:            Language
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

extra-source-files:
  examples/*.hs

source-repository head
  type:     git
  location: https://github.com/emilaxelsson/ho-rewriting

library
  exposed-modules:
    Data.Rewriting.Rules
    Data.Rewriting.FirstOrder
    Data.Rewriting.HigherOrder

  hs-source-dirs:
    src

  build-depends:
    base >=4.7 && <5,
    containers,
    compdata ==0.10.*,
    mtl,
    patch-combinators

  default-language: Haskell2010

  default-extensions:
    DeriveFoldable
    DeriveFunctor
    DeriveTraversable
    FlexibleContexts
    GeneralizedNewtypeDeriving
    ScopedTypeVariables
    TypeFamilies
    TypeOperators

  other-extensions:
    NoMonomorphismRestriction
    TemplateHaskell
    TupleSections
    UndecidableInstances

test-suite capture
  type: exitcode-stdio-1.0

  hs-source-dirs: examples, tests

  main-is: Capture.hs

  build-depends:
    base,
    compdata,
    ho-rewriting,
    patch-combinators

  default-language: Haskell2010

