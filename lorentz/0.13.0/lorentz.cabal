cabal-version: 2.0

-- This file has been generated from package.yaml by hpack version 0.34.4.
--
-- see: https://github.com/sol/hpack

name:           lorentz
version:        0.13.0
synopsis:       EDSL for the Michelson Language
description:    Lorentz is a powerful meta-programming tool which allows one to write Michelson contracts directly in Haskell. It has the same instructions as Michelson, but operates on Haskell values and allows one to use Haskell features.
category:       Language
homepage:       https://gitlab.com/morley-framework/morley
bug-reports:    https://gitlab.com/morley-framework/morley/-/issues
author:         camlCase, Serokell, Tocqueville Group
maintainer:     Serokell <hi@serokell.io>
copyright:      2019-2021 Tocqueville Group
license:        MIT
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    CHANGES.md
    README.md

source-repository head
  type: git
  location: git@gitlab.com:morley-framework/morley.git

library
  exposed-modules:
      Lorentz
      Lorentz.Address
      Lorentz.ADT
      Lorentz.Annotation
      Lorentz.Arith
      Lorentz.Base
      Lorentz.Bytes
      Lorentz.Coercions
      Lorentz.Common
      Lorentz.Constraints
      Lorentz.Constraints.Derivative
      Lorentz.Constraints.Scopes
      Lorentz.ContractRegistry
      Lorentz.Default
      Lorentz.Doc
      Lorentz.Empty
      Lorentz.Entrypoints
      Lorentz.Entrypoints.Core
      Lorentz.Entrypoints.Doc
      Lorentz.Entrypoints.Helpers
      Lorentz.Entrypoints.Impl
      Lorentz.Entrypoints.Manual
      Lorentz.Errors
      Lorentz.Errors.Common
      Lorentz.Errors.Numeric
      Lorentz.Errors.Numeric.Contract
      Lorentz.Errors.Numeric.Doc
      Lorentz.Expr
      Lorentz.Ext
      Lorentz.Extensible
      Lorentz.FixedArith
      Lorentz.Instr
      Lorentz.Iso
      Lorentz.Macro
      Lorentz.OpSize
      Lorentz.Pack
      Lorentz.Polymorphic
      Lorentz.Prelude
      Lorentz.Print
      Lorentz.Rebinded
      Lorentz.Referenced
      Lorentz.ReferencedByName
      Lorentz.Run
      Lorentz.Run.Simple
      Lorentz.StoreClass
      Lorentz.StoreClass.Extra
      Lorentz.Tickets
      Lorentz.UParam
      Lorentz.Util.TH
      Lorentz.Value
      Lorentz.Wrappable
      Lorentz.Zip
  other-modules:
      Paths_lorentz
  autogen-modules:
      Paths_lorentz
  hs-source-dirs:
      src
  default-extensions:
      AllowAmbiguousTypes
      ApplicativeDo
      BangPatterns
      BlockArguments
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveAnyClass
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DerivingStrategies
      DerivingVia
      EmptyCase
      FlexibleContexts
      FlexibleInstances
      GADTs
      GeneralizedNewtypeDeriving
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NegativeLiterals
      NumericUnderscores
      NumDecimals
      OverloadedLabels
      OverloadedStrings
      PatternSynonyms
      PolyKinds
      QuasiQuotes
      RankNTypes
      RecordWildCards
      RecursiveDo
      ScopedTypeVariables
      StandaloneDeriving
      StrictData
      TemplateHaskell
      TupleSections
      TypeApplications
      TypeFamilies
      TypeOperators
      UndecidableInstances
      UndecidableSuperClasses
      ViewPatterns
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude -Wno-prepositive-qualified-module -Wno-missing-safe-haskell-mode -Wno-unused-packages
  build-depends:
      aeson-pretty
    , base-noprelude >=4.7 && <5
    , bimap
    , bytestring
    , constraints >=0.11
    , containers
    , cryptonite
    , data-default
    , first-class-families >=0.5.0.0
    , fmt
    , lens
    , morley
    , morley-prelude >=0.3.0
    , mtl
    , named
    , optparse-applicative
    , singletons
    , template-haskell
    , text
    , text-manipulate
    , unordered-containers
    , vinyl
    , with-utf8
  default-language: Haskell2010
