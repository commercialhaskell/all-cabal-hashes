cabal-version:       >=1.10

name:                cabal-clean
version:             0.1.20210924
synopsis:            Remove outdated cabal build artefacts from `dist-newstyle`.

description:         Simple command line tool to remove cabal build artefacts
                     from `dist-newstyle/build` that are superseded by newer
                     versions of the built package or the Haskell compiler.

homepage:            https://github.com/andreasabel/cabal-clean
bug-reports:         https://github.com/andreasabel/cabal-clean/issues
license:             BSD3
license-file:        LICENSE

author:              Andreas Abel
maintainer:          Andreas Abel <andreas.abel@cse.gu.se>
copyright:           Andreas Abel, 2021
category:            Development

build-type:          Simple

extra-source-files:  CHANGELOG.md
                     README.md

tested-with:
  GHC == 8.0.2
  GHC == 8.2.2
  GHC == 8.4.4
  GHC == 8.6.5
  GHC == 8.8.4
  GHC == 8.10.7
  GHC == 9.0.1
  GHC == 9.2.0.20210821

source-repository head
  type:     git
  location: git://github.com/andreasabel/cabal-clean.git

source-repository this
  type:     git
  location: git://github.com/andreasabel/cabal-clean.git
  tag:      v0.1.20210924

executable cabal-clean
  main-is:             Main.hs

  other-modules:
    License
    Options
    Structure
    Util
    Version
    Paths_cabal_clean

  build-depends:
    base >= 4.9 && < 5
    -- fromDescList requires containers >= 0.5.8
    , containers >= 0.5.8
    , directory
    -- , directory >= 1.2.6.2 && < 1.4
    , filepath
    -- , filepath == 1.4.*
    , mtl
    , optparse-applicative
    -- , optparse-applicative >= 0.13 && < 0.16
    -- pretty-terminal-0.1.0.0 has base >= 4.9
    , pretty-terminal
    , process
    , split
    , string-qq

  hs-source-dirs:      src
  default-language:    Haskell2010

  default-extensions:
    -- BangPatterns
    -- ConstraintKinds
    -- DefaultSignatures
    -- DeriveDataTypeable
    -- DeriveFoldable
    -- DeriveFunctor
    -- DeriveTraversable
    -- ExistentialQuantification
    -- FlexibleContexts
    -- FlexibleInstances
    -- FunctionalDependencies
    -- InstanceSigs
    LambdaCase
    -- MultiParamTypeClasses
    -- MultiWayIf
    -- NamedFieldPuns
    -- OverloadedStrings
    -- PatternSynonyms
    -- RankNTypes
    RecordWildCards
    -- ScopedTypeVariables
    -- StandaloneDeriving
    TupleSections
    -- TypeSynonymInstances

  ghc-options:
    -Wall
    -Wcompat
