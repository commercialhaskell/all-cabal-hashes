cabal-version: 3.0

name: pretty-html
version: 0.1.0.1
x-revision: 1
synopsis: Produce nice human-readable HTML
category: HTML

description:
    An HTML-building library that gives you some control over
    how the HTML is rendered, to produce human-readable results.

extra-source-files: *.md

data-dir: data
data-files: example.html

homepage:       https://github.com/typeclasses/pretty-html
bug-reports:    https://github.com/typeclasses/pretty-html/issues
author:         Chris Martin
maintainer:     Chris Martin, Julie Moronuki
copyright:      2022 Mission Valley Software LLC
license:        MIT
license-file:   license.txt

source-repository head
    type: git
    location: https://github.com/typeclasses/pretty-html

common base
    default-language: Haskell2010
    ghc-options: -Wall
    default-extensions:
        BlockArguments
        LambdaCase
        OverloadedStrings
    build-depends:
        base ^>= 4.14 || ^>= 4.15 || ^>= 4.16 || ^>= 4.17 || ^>= 4.18
      , text ^>= 1.2.4 || ^>= 2.0
    mixins:
      , base
            ( Prelude
            , Data.Foldable as Foldable
            , Data.Semigroup as Semigroup
            , Numeric.Natural as Natural
            )
      , text
            ( Data.Text.Lazy as LazyText
            , Data.Text.Lazy.Builder as TextBuilder
            )

library
    import: base
    hs-source-dirs: library/pretty-html
    exposed-modules: PrettyHTML

library pretty-html-paths
    default-language: Haskell2010
    ghc-options: -Wall
    exposed-modules: Paths_pretty_html
    autogen-modules: Paths_pretty_html
    build-depends: base

test-suite test-pretty-html
    import: base
    main-is: Main.hs
    hs-source-dirs: test-suite/test-pretty-html
    type: exitcode-stdio-1.0
    build-depends:
      , bytestring ^>= 0.10.12 || ^>= 0.11
      , filepath ^>= 1.4.2
      , pretty-html
      , pretty-html-paths
    mixins:
      , base
            ( Control.Monad as Monad
            , System.Exit as Exit
            )
      , bytestring (Data.ByteString.Lazy as ByteString)
      , filepath (System.FilePath as FilePath)
      , pretty-html-paths (Paths_pretty_html as Paths)
      , text
            ( Data.Text.Lazy.Encoding as LazyTextEncoding
            , Data.Text.Lazy.IO as LazyTextIO
            )
