-- This file has been generated from package.yaml by hpack version 0.20.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 6d2238ec61b205b3bc42dee2863a5ec675ee3ea54b2cf1a906749d83ff7e4704

name:           io-string-like
version:        0.1.0.0
x-revision: 1
synopsis:       Classes to handle Prelude style IO functions for different datatypes
description:    The functions in the Prelude such as "getContents", "putStr" only work for plain Strings.
                .
                There are similar functions in "ByteString" for reading and writing, as well as "Text".
                .
                This requires one to import the appropriate functions, usually qualified, for the particular datatype one is using. Changing the datatype at the very least involves changing import statements across your program.
                .
                The package introduces classes to overload functions like "getContents", "putStr" over multiple datatypes, so implementations can be changed easily.
                .
                All the code documentation is in "System.IO.StringLike.Impl".
                .
                All the other modules are just re-exports.
category:       Data
homepage:       https://github.com/clintonmead/io-string-like#readme
bug-reports:    https://github.com/clintonmead/io-string-like/issues
author:         Clinton Mead
maintainer:     clintonmead@gmail.com
copyright:      Copyright: (c) 2018 Clinton Mead
license:        BSD3
license-file:   LICENSE
build-type:     Simple
cabal-version:  >= 1.10

source-repository head
  type: git
  location: https://github.com/clintonmead/io-string-like

library
  hs-source-dirs:
      src
  ghc-options: -Wall
  build-depends:
      base >=4.9 && <5
    , binary
    , bytestring
    , text
  exposed-modules:
      System.IO.StringLike.GetContents
      System.IO.StringLike.GetLine
      System.IO.StringLike.Impl
      System.IO.StringLike.PutStr
      System.IO.StringLike.PutStrLn
  other-modules:
      Paths_io_string_like
  default-language: Haskell2010
