Name:                audacity
Version:             0.0.2.1
x-revision: 1
Synopsis:            Interchange with the Audacity sound signal editor
Description:
  This package provides functions
  for interchange with the Audacity sound signal editor.
  Currently we support import and export of label tracks,
  export of Audacity projects and
  limited import of tracks from Audacity projects.
  .
  We provide some examples that are useful on its own:
  .
  * @sox-split@:
    Split an audio file according to a label track.
    Audacity provides this function by itself.
    You can use placeholders like @%s@ and @%02d@
    in order to compose the names of the parts from the labels and positions.
  .
  * @sox-concat@:
    Concatenate a sequence of sound files with matching
    sampling rates and numbers of channels using SoX
    and generate an Audacity label track file
    that shows the origins of the parts.
  .
  * @audacity-concat@:
    Create an Audacity project file
    containing a virtual concatenation of the input sound files
    and a label track showing the origins of the sound files.
  .
  * @audacity-combine@:
    Put several audio and label files into tracks of a new Audacity project.
    Opening one or even multiple such projects is much easier
    than loading individual tracks into Audacity.
Homepage:            https://hub.darcs.net/thielema/audacity
License:             BSD3
License-File:        LICENSE
Author:              Henning Thielemann
Maintainer:          haskell@henning-thielemann.de
Category:            Sound
Build-Type:          Simple
Cabal-Version:       >=1.10

Source-Repository this
  Tag:         0.0.2.1
  Type:        darcs
  Location:    https://hub.darcs.net/thielema/audacity

Source-Repository head
  Type:        darcs
  Location:    https://hub.darcs.net/thielema/audacity

Flag buildExamples
  description: Build example executables
  default:     False

Library
  Exposed-Modules:
    Sound.Audacity.LabelTrack
    Sound.Audacity.Project
    Sound.Audacity.Project.Track.Label
    Sound.Audacity.Project.Track.Wave
    Sound.Audacity.Project.Track.Wave.Summary
  Other-Modules:
    Sound.Audacity.XML
    Sound.Audacity.XML.Parser
    Sound.Audacity.XML.Attribute
  Build-Depends:
    storablevector >=0.2.9 && <0.3,
    storable-record >=0.0 && <0.1,
    bytestring >=0.9 && <0.12,
    directory >=1.1 && <1.4,
    filepath >=1.3 && <1.5,
    tagchup >=0.4 && <0.5,
    xml-basic >=0.1.1 && <0.2,
    non-empty >=0.2.1 && <0.4,
    utility-ht >=0.0.10 && <0.1,
    explicit-exception >=0.1.7 && <0.3,
    semigroups >=0.1 && <1.0,
    transformers >=0.3 && <0.7,
    deepseq >=1.3 && <1.5,
    base >=4.5 && <5
  Hs-Source-Dirs:      src
  Default-Language:    Haskell2010
  GHC-Options:         -Wall

Executable sox-split
  Main-Is:             Split.hs
  Other-Modules:       Common
  Hs-Source-Dirs:      example
  Default-Language:    Haskell2010
  GHC-Options:         -Wall
  If flag(buildExamples)
    Build-Depends:
      audacity,
      soxlib >=0.0 && <0.1,
      storablevector,
      directory,
      optparse-applicative >=0.11 && <0.18,
      filepath >=1.3 && <1.5,
      non-empty,
      utility-ht,
      base
  Else
    Buildable: False

Executable sox-concat
  Main-Is:             Concatenate.hs
  Other-Modules:       Common
  Hs-Source-Dirs:      example
  Default-Language:    Haskell2010
  GHC-Options:         -Wall
  If flag(buildExamples)
    Build-Depends:
      audacity,
      soxlib >=0.0 && <0.1,
      storablevector,
      directory,
      optparse-applicative >=0.11 && <0.18,
      filepath >=1.3 && <1.5,
      non-empty,
      utility-ht,
      base
  Else
    Buildable: False

Executable audacity-concat
  Main-Is:             Bundle.hs
  Other-Modules:       Common
  Hs-Source-Dirs:      example
  Default-Language:    Haskell2010
  GHC-Options:         -Wall
  If flag(buildExamples)
    Build-Depends:
      audacity,
      soxlib >=0.0 && <0.1,
      storablevector,
      directory,
      optparse-applicative >=0.11 && <0.18,
      filepath >=1.3 && <1.5,
      non-empty,
      utility-ht,
      base
  Else
    Buildable: False

Executable audacity-combine
  Main-Is:             Combine.hs
  Other-Modules:       Common
  Hs-Source-Dirs:      example
  Default-Language:    Haskell2010
  GHC-Options:         -Wall
  If flag(buildExamples)
    Build-Depends:
      audacity,
      soxlib >=0.0 && <0.1,
      storablevector,
      directory,
      optparse-applicative >=0.11 && <0.18,
      filepath >=1.3 && <1.5,
      non-empty,
      utility-ht,
      base
  Else
    Buildable: False
