Name:                compact-word-vectors
Version:             0.1
Synopsis:            Small vectors of small integers stored very compactly.
Description:         A data structure to store small vectors of small integers
                     with minimal memory overhead. For example the vector
                     corresponding to [1..14] only takes 16 bytes (2 machine
                     words on 64 bit architectures) of heap memory.
License:             BSD3
License-file:        LICENSE
Author:              Balazs Komuves
Copyright:           (c) 2019 Balazs Komuves
Maintainer:          bkomuves (plus) hackage (at) gmail (dot) com
Homepage:            http://moire.be/haskell/
Stability:           Experimental
Category:            Data
Tested-With:         GHC == 8.6.5
Cabal-Version:       1.24
Build-Type:          Simple

source-repository head
  type:                git
  location:            https://github.com/bkomuves/compact-word-vectors

--------------------------------------------------------------------------------

Library

  Build-Depends:       base >= 4 && < 5, primitive >= 0.7

  Exposed-Modules:     Data.Vector.Compact.WordVec
                       Data.Vector.Compact.IntVec
                       Data.Vector.Compact.Blob

  Default-Extensions:  CPP, BangPatterns
  Other-Extensions:    MagicHash, UnboxedTuples

  Default-Language:    Haskell2010

  Hs-Source-Dirs:      src

  ghc-options:         -fwarn-tabs -fno-warn-unused-matches -fno-warn-name-shadowing -fno-warn-unused-imports

    
--------------------------------------------------------------------------------

test-suite compact-word-vector-tests
                      
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             TestSuite.hs
  
  other-modules:       Tests.Blob
                       Tests.WordVec
                       Tests.IntVec
                       
  build-depends:       base >= 4 && < 5, primitive >= 0.7, random,
                       compact-word-vectors >= 0.1,
                       QuickCheck >= 2,
                       tasty, tasty-quickcheck, tasty-hunit

  Default-Language:    Haskell2010
  Default-Extensions:  CPP, BangPatterns

--------------------------------------------------------------------------------


