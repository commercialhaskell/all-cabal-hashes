cabal-version: 2.4
name:          spooky
version:       0.1.0.0
x-revision: 1
author:        Isaac Shapira
maintainer:    isaac.shapira@platonic.systems
category:      data
license:       BSD-3-Clause
license-file:  LICENSE
extra-source-files:
  README.md
synopsis:
  Unified API for phantom typed newtypes and type aliases
description:
  In scenarios where newtypes are not well supported, we may need
  to use type aliases instead for various reasons. This means we
  give away type safety and static analysis tooling. We can get this
  safety back with Spooky. When we compile with -f typed, we
  get a type check using newtypes. When compiled without the flag
  we get the same code type checking with type aliases.


source-repository head
  type: git
  location: https://gitlab.com/fresheyeball/spooky.git
  branch: master


flag untyped
  description: Should Spooky be an alias?
  manual: True
  default: False


flag typed
  description: Should Spooky be newtyped?
  manual: True
  default: True


library
  exposed-modules:
      Data.Spooky

  build-depends:
      base >=4.9 && <5

  hs-source-dirs: .

  ghc-options:
    -Wall
    -Wcompat
    -fwarn-redundant-constraints
    -fwarn-incomplete-uni-patterns
    -fwarn-tabs
    -fwarn-incomplete-record-updates
    -fwarn-identities

  if !flag(untyped) && flag(typed)
    cpp-options: -DTyped

  default-language: Haskell2010
