name: safe-money
version: 0.9.1
license: BSD3
license-file: LICENSE
copyright: Copyright (c) Renzo Carbonara 2016-2019
author: Renzo Carbonara
maintainer: renÎ»ren!zone
stability: Experimental
tested-with: GHC==8.4.1
homepage: https://github.com/k0001/safe-money
bug-reports: https://github.com/k0001/safe-money/issues
category: Money
build-type: Simple
cabal-version: >=1.10
extra-source-files: README.md changelog.md
synopsis:
  Type-safe and lossless encoding and manipulation of money, fiat
  currencies, crypto currencies and precious metals.
description:
  The Haskell @safe-money@ library offers type-safe and lossless encoding and
  operations for monetary values in all world currencies, including fiat
  currencies, precious metals and crypto-currencies.
  .
  Useful instances for the many types defined by @safe-money@ can be found
  in these other libraries:
  .
  * [safe-money-aeson](https://hackage.haskell.org/package/safe-money-aeson):
    @FromJSON@ and @ToJSON@ instances (from the [aeson](https://hackage.haskell.org/package/aeson) library).
  .
  * [safe-money-cereal](https://hackage.haskell.org/package/safe-money-cereal):
    @Serialize@ instances (from the [cereal](https://hackage.haskell.org/package/cereal) library).
  .
  * [safe-money-serialise](https://hackage.haskell.org/package/safe-money-serialise):
    @Serialise@ instances (from the [serialise](https://hackage.haskell.org/package/serialise) library).
  .
  * [safe-money-store](https://hackage.haskell.org/package/safe-money-store):
    @Store@ instances (from the [store](https://hackage.haskell.org/package/store) library).
  .
  * [safe-money-xmlbf](https://hackage.haskell.org/package/safe-money-xmlbf):
    @FromXml@ and @ToXml@ instances (from the [xmlbf](https://hackage.haskell.org/package/xmlbf) library).

source-repository head
  type: git
  location: https://github.com/k0001/safe-money

library
  default-language: Haskell2010
  hs-source-dirs: src
  ghc-options: -Wall -O2
  build-depends:
    base (>=4.8 && <5.0),
    binary,
    constraints,
    hashable,
    deepseq,
    QuickCheck,
    text,
    vector-space
  exposed-modules:
    Money
    Money.Internal

test-suite test
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  hs-source-dirs: test
  main-is: Main.hs
  build-depends:
    base,
    binary,
    bytestring,
    constraints,
    deepseq,
    hashable,
    safe-money,
    tasty,
    tasty-hunit,
    tasty-quickcheck,
    text,
    vector-space
