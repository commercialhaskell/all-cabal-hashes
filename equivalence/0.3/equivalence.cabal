Name:            equivalence
Version:         0.3
x-revision: 1
License:         BSD3
License-File:    LICENSE
Author:          Patrick Bahr
Maintainer:      paba@di.ku.dk
Homepage:        https://bitbucket.org/paba/equivalence/
bug-reports:     https://bitbucket.org/paba/equivalence/issues/new
Synopsis:        Maintaining an equivalence relation implemented as union-find using STT.
Description:
  This is an implementation of Tarjan's Union-Find algorithm (Robert
  E. Tarjan. "Efficiency of a Good But Not Linear Set Union
  Algorithm", JACM 22(2), 1975) in order to maintain an equivalence
  relation.

  This implementation is a port of the /union-find/ package using the
  ST monad transformer (instead of the IO monad).
Category:        Algorithms, Data
Stability:       provisional
Build-Type:      Simple
Cabal-Version:   >=1.9.2


source-repository head
  type:     hg
  location: https://bitbucket.org/paba/equivalence/


Test-Suite test
  Type:                 exitcode-stdio-1.0
  Main-is:		Data_Test.hs
  Other-Modules:	Data.Equivalence.Monad_Test
  hs-source-dirs:	src testsuite/tests
  Build-Depends:        base >= 4, template-haskell, containers, mtl >= 2.2.1, QuickCheck >= 2,
                        test-framework, test-framework-quickcheck2, STMonadTrans

Library
  Build-Depends:
    base >= 4 && < 4.12, containers, mtl >= 2.2.1 && < 2.3, STMonadTrans
  Exposed-Modules:
    Data.Equivalence.STT,
    Data.Equivalence.Monad
  Hs-Source-Dirs: src
