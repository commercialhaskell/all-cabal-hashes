------------------------------------------------------------
-- michael j. klein <lambdamichael@gmail.com>   ~ 2019.04.11
------------------------------------------------------------

-- By and large Cabal >=1.2 is fine; but
-- * >=1.6 gives tested-with: and source-repository:
-- * >=1.8 allows executables to build-depends: on the library
-- * >=1.9.2 allows Test-Suite
Cabal-Version:  >= 1.9.2
Build-Type:     Simple

Name:           text-trie
Version:        0.2.5.0
Stability:      provisional
Homepage:       http://github.com/michaeljklein/text-trie
Author:         wren gayle romano, michael j. klein
Maintainer:     lambdamichael@gmail.com
Copyright:      Copyright (c) 2008--2019 wren gayle romano, 2019 michael j. klein
License:        BSD3
License-File:   LICENSE

Category:       Data, Data Structures
Synopsis:       An efficient finite map from Text to values, based on bytestring-trie.
Description:    An efficient finite map from Text to values, based on bytestring-trie.
                .
                The implementation is based on big-endian patricia
                trees, like "Data.IntMap". We first trie on the
                elements of "Data.ByteString" and then trie on the
                big-endian bit representation of those elements.
                Patricia trees have efficient algorithms for union
                and other merging operations, but they're also quick
                for lookups and insertions.
                .
                If you are only interested in being able to associate
                strings to values, then you may prefer the @hashmap@
                package which is faster for those only needing a
                map-like structure. This package is intended for
                those who need the extra capabilities that a trie-like
                structure can offer (e.g., structure sharing to
                reduce memory costs for highly redundant keys,
                taking the submap of all keys with a given prefix,
                contextual mapping, extracting the minimum and
                maximum keys, etc.)


Extra-source-files:
    AUTHORS, CHANGELOG, README.md

-- Tested-With:
--     GHC ==7.4.1, GHC ==7.4.2,
--     GHC ==7.6.1, GHC ==7.6.2, GHC ==7.6.3,
--     GHC ==7.8.1, GHC ==7.8.2, GHC ==7.8.3, GHC ==7.8.4,
--     GHC ==7.10.1, GHC ==7.10.2, GHC ==7.10.3,
--     GHC ==8.0.1, GHC ==8.0.2,
--     GHC ==8.2.1, GHC ==8.2.2,
--     GHC ==8.4.1, GHC ==8.4.2, GHC ==8.4.3,
--     GHC ==8.6.1, GHC ==8.6.2

Source-Repository head
    Type:     git
    Location: https://github.com/michaeljklein/text-trie.git

------------------------------------------------------------
Library
    Hs-Source-Dirs:  src
    Exposed-Modules: Data.Trie.Text
                   , Data.Trie.Text.Internal
                   , Data.Trie.Text.Convenience
                   , Data.Trie.TextInternal
                   , Data.Text.Internal.Word16
    Other-Modules:   Data.Trie.Text.BitTwiddle
                   , Data.Trie.Errors
    -- The lower bounds are more restrictive than necessary.
    -- But then, we don't maintain any CI tests for older
    -- versions, so these are the lowest bounds we've verified.
    Build-Depends: base       >= 4.5   && < 4.13
                 , text       >= 1.2.3 && < 1.2.4
                 , binary     >= 0.5.1 && < 0.8.7

------------------------------------------------------------
Test-Suite test-text-trie
    type:           exitcode-stdio-1.0
    Hs-Source-Dirs: test
    main-is:        test-text-trie.hs
    ghc-options:    -fno-warn-orphans
    Other-Modules:  Data.Trie.TextInternal.Test
                  , Data.Trie.Text.Test
                  , FromListBench
                  , FromListBench.Text
                  , FromListBench.Text.Encode
                  , TrieFile.Text
    build-depends: text-trie
                 , base       >= 4.5   && < 4.13
                 , bytestring >= 0.9.2 && < 0.11
                 , text       >= 1.2.3 && < 1.2.4
                 , binary     >= 0.5.1 && < 0.8.7
                 , QuickCheck
                 , HUnit
                 , smallcheck
                 , microbench
                 , bytestring-trie >= 0.2.5 && < 0.2.6
                 , silently >= 1.2.5 && < 1.2.6

------------------------------------------------------------
------------------------------------------------------- fin.
