Name:             stm-split
Version:          0.0.2.1
License:          BSD3
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Category:         Concurrent
Synopsis:         TMVars, TVars and TChans with distinguished input and output side
Description:
  Transactional MVars, Vars and Channels with distinguished input and output side.
  When threads communicate via a TMVar, a TVar or a TChan
  there are often clearly defined roles,
  which thread is the sender and which one is receiver.
  We provide wrappers around the standard concurrency communication channels
  that make the distinction clear and type safe.
  .
  For example, if a function has a parameter of type @TChan.In@
  then it is sure that it will only write to that channel.
  Additionally if the compiler warns about an unused @TChan.Out@
  that was created by @TChan.new@
  then you know that the receiver part of your communication is missing.
  .
  See also package @concurrent-split@ for non-transactional communication.
  This package follows the same idea as @chan-split@ but is strictly Haskell 98.
Tested-With:      GHC==6.12.3, GHC==7.4.1
Cabal-Version:    >=1.6
Build-Type:       Simple
Source-Repository this
  Tag:         0.0.2.1
  Type:        darcs
  Location:    http://hub.darcs.net/thielema/stm-split/

Source-Repository head
  Type:        darcs
  Location:    http://hub.darcs.net/thielema/stm-split/

Library
  Build-Depends:
    stm >=2.2 && <2.6,
    base >=4 && <5

  GHC-Options:      -Wall
  Hs-Source-Dirs:   src
  Exposed-Modules:
    Control.Concurrent.STM.Split.Class
    Control.Concurrent.STM.Split.MVar
    Control.Concurrent.STM.Split.Chan
