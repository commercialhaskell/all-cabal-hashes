name:                canonical-json
version:             0.5.0.0
synopsis:            Canonical JSON for signing and hashing JSON values
description:         An implementation of Canonical JSON.
                     .
                     <http://wiki.laptop.org/go/Canonical_JSON>
                     .
                     The \"canonical JSON\" format is designed to provide
                     repeatable hashes of JSON-encoded data. It is designed
                     for applications that need to hash, sign or authenitcate
                     JSON data structures, including embedded signatures.
                     .
                     Canonical JSON is parsable with any full JSON parser, and
                     it allows whitespace for pretty-printed human readable
                     presentation, but it can be put into a canonical form
                     which then has a stable serialised representation and
                     thus a stable hash.
license:             BSD3
license-file:        LICENSE
author:              Duncan Coutts, Edsko de Vries
maintainer:          duncan@well-typed.com, edsko@well-typed.com
copyright:           Copyright 2015-2017 Well-Typed LLP
category:            Text, JSON
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10

library
  exposed-modules:     Text.JSON.Canonical
                       Text.JSON.Canonical.Class
                       Text.JSON.Canonical.Parse
                       Text.JSON.Canonical.Types
  other-extensions:    CPP, GeneralizedNewtypeDeriving, DeriveDataTypeable,
                       MultiParamTypeClasses, FlexibleInstances,
                       ScopedTypeVariables, OverlappingInstances
  build-depends:       base              >= 4.5     && < 5,
                       bytestring        >= 0.9     && < 0.11,
                       containers        >= 0.4     && < 0.6,
                       parsec            >= 3.1     && < 3.2,
                       pretty            >= 1.0     && < 1.2
  default-language:    Haskell2010
  ghc-options:         -Wall
