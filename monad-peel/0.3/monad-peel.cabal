Name:                monad-peel
Version:             0.3
Synopsis:            Lift control operations like exception catching through monad transformers
Description:
  This package defines @MonadPeelIO@, a subset of @MonadIO@ into which
  generic control operations such as @catch@ can be lifted from @IO@.
  Instances are based on monad transformers in @MonadTransPeel@, which
  includes all standard monad transformers in the @transformers@
  library except @ContT@.  For convenience, it provides a wrapped
  version of Control.Exception with types generalized from @IO@ to all
  monads in @MonadPeelIO@.
Homepage:            http://andersk.mit.edu/haskell/monad-peel/
License:             BSD3
License-file:        LICENSE
Author:              Anders Kaseorg, Sergey Alirzaev
Maintainer:          Sergey Alirzaev <zl29ah@gmail.com>
Copyright:           (c) 2010 Anders Kaseorg, 2015 Sergey Alirzaev
Category:            Control
Build-type:          Simple
Cabal-version:       >= 1.10
Tested-With:         GHC == 8.0.2, GHC == 8.4.3

Source-repository head
  type:              git
  location:          https://github.com/l29ah/monad-peel.git

Source-repository this
  type:              git
  location:          https://github.com/l29ah/monad-peel.git
  tag:               0.3

Library
  default-language:    Haskell2010
  Exposed-modules:
    Control.Monad.Trans.Peel
    Control.Monad.IO.Peel
    Control.Exception.Peel

  Build-depends:
    base >= 3 && < 5,
    extensible-exceptions,
    transformers >= 0.2 && < 0.7

test-suite test
  default-language:    Haskell2010
  ghc-options: -Wall
  type: exitcode-stdio-1.0
  main-is: test.hs
  build-depends:       base >= 3 && < 5,
                       HUnit,
                       test-framework,
                       test-framework-hunit,
                       transformers >= 0.2 && < 0.6,
                       extensible-exceptions
