name:                plur
version:             0.2.0.0
synopsis:            Plurality monad: Zero, one, or at least two.
description:
  Often when counting you don't need an exact count, but only whether there are
  two things. Two examples:
  .
  When searching for inhabitants of a type (implementations of a program), you
  want to be able to tell whether there are (a) no possible inhabitants, (b) a
  unique inhabitant, or (c) multiple inhabitants.
  .
  When displaying the name of a variable, if there's exactly one variable of a
  given name ("a") you can just use that name, but if there are multiples you
  might use a unique id to disambiguate them ("a1" vs "a2").
license:             BSD3
license-file:        LICENSE
author:              Joel Burget
maintainer:          joelburget@gmail.com
copyright:           (c) 2018-2019 Joel Burget
category:            Data
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10
tested-with:         GHC == 8.6.3

library
  exposed-modules:     Data.Plur
  build-depends:
    base >=4.3 && <4.14,
    semigroups >= 0.18
  hs-source-dirs:      src
  default-language:    Haskell2010

test-suite Properties
  type:             exitcode-stdio-1.0
  hs-source-dirs:   test
  main-is:          Properties.hs
  build-depends:
    base,
    plur,
    hedgehog,
    hedgehog-classes >= 0.1.1
  default-language: Haskell2010
