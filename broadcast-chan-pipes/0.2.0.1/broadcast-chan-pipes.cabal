Name:               broadcast-chan-pipes
Version:            0.2.0.1

Homepage:           https://github.com/merijn/broadcast-chan
Bug-Reports:        https://github.com/merijn/broadcast-chan/issues

Author:             Merijn Verstraaten
Maintainer:         Merijn Verstraaten <merijn@inconsistent.nl>
Copyright:          Copyright Â© 2014-2018 Merijn Verstraaten

License:            BSD3
License-File:       LICENSE

Category:           System
Cabal-Version:      >= 1.10
Build-Type:         Simple
Tested-With:        GHC == 7.8.4, GHC == 7.10.3, GHC == 8.0.2, GHC == 8.2.2,
                    GHC == 8.4.3, GHC == 8.6.1

Synopsis:           Pipes-based parallel streaming code for broadcast-chan

Description:
    __WARNING:__ While the code in this library should be fairly stable and
    production, the API is something I'm still working on. API changes will
    follow the PVP, but __expect__ breaking API changes in future versions!

Library
  Default-Language:     Haskell2010
  GHC-Options:          -Wall -O2 -fno-warn-unused-do-bind
  Exposed-Modules:      BroadcastChan.Pipes
                        BroadcastChan.Pipes.Throw
  Other-Modules:        BroadcastChan.Pipes.Internal

  Other-Extensions:     NamedFieldPuns
                        Safe
                        ScopedTypeVariables

  Build-Depends:        base >= 4.7 && < 5
               ,        broadcast-chan == 0.2.0.*
               ,        pipes >= 4.1.6 && < 4.4
               ,        pipes-safe == 2.2.*

Test-Suite pipes
  Default-Language:     Haskell2010
  Type:                 exitcode-stdio-1.0
  Main-Is:              PipeTest.hs
  GHC-Options:          -Wall -fno-warn-unused-do-bind
  Hs-Source-Dirs:       tests
  Build-Depends:        base
               ,        broadcast-chan-pipes
               ,        broadcast-chan-tests
               ,        containers >= 0.4 && < 0.6
               ,        foldl >= 1.0.4 && < 1.5
               ,        pipes >= 4.1.6 && < 4.4
               ,        pipes-safe == 2.2.*

Source-Repository head
  Type:     git
  Location: ssh://github.com:merijn/broadcast-chan.git

Source-Repository head
  Type:     mercurial
  Location: https://bitbucket.org/merijnv/broadcast-chan
