Cabal-Version:    2.2
Name:             gnuplot
Version:          0.5.7
License:          BSD-3-Clause
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://www.haskell.org/haskellwiki/Gnuplot
Package-URL:      http://code.haskell.org/gnuplot/
Category:         Graphics, Math
Synopsis:         2D and 3D plots using gnuplot
Description:
   This is a wrapper to gnuplot
   which lets you create 2D and 3D plots.
   .
   Start a simple session with @cabal repl@.
   If not already loaded, call @:module Graphics.Gnuplot.Simple@
   in order to load "Graphics.Gnuplot.Simple"
   which is ready for use in GHCi.
   It does not address all fancy gnuplot features
   in order to stay simple.
   For more sophisticated plots,
   especially batch generated graphics,
   I recommend "Graphics.Gnuplot.Advanced".
   This module contains also an overview
   of the hierarchy of objects.
   .
   Examples for using this interface can be found in the "Demo" module.
   In order to compile this and install an example data file,
   use the Cabal flag @buildExamples@:
   .
   > $ cabal install -fbuildExamples gnuplot
   .
   With the Cabal flags executePipe and executeShell
   you can switch to more convenient
   but probably less portable ways
   of feeding gnuplot with a script.
   .
   Alternative packages: @plot@, @HPlot@, @Chart@, @textPlot@, @easyplot@
Tested-With:       GHC==7.4.2, GHC==7.6.3, GHC==7.8.4, GHC==7.10.3
Tested-With:       GHC==8.2.1, GHC==8.6.5
Build-Type:        Simple
Extra-Source-Files:
  Makefile
  Changes.md
Data-Files:
  data/runtime.data

Source-Repository this
  Tag:         0.5.7
  Type:        darcs
  Location:    http://code.haskell.org/gnuplot/

Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/gnuplot/

Flag buildExamples
  description: Build example executables
  default:     False

Flag executePipe
  description: Avoid a temporary gnuplot script by running gnuplot with runInteractiveProcess
  default:     False

Flag executeShell
  description: Avoid a temporary gnuplot script by calling gnuplot via a UNIX shell and its piping syntax
  default:     False

Library
  Build-Depends:
    filepath >=1.1 && <1.5,
    temporary >=1.1 && <1.4,
    array >=0.1 && <0.6,
    containers >=0.1 && <0.7,
    utility-ht >=0.0.12 && <0.1,
    data-accessor-transformers >=0.2.1 && <0.3,
    data-accessor >=0.2.2 && <0.3,
    transformers >=0.3 && <0.7,
    semigroups >=0.1 && <1.0,
    deepseq >=1.0 && <1.5,
    process >=1.0 && <1.7,
    time >=1.5 && <1.14,
    base >=2 && <5

  Default-Language: Haskell98
  GHC-Options: -Wall

  Hs-Source-Dirs: src
  If flag(executePipe)
    Hs-Source-Dirs: execute/pipe
  Else
    If flag(executeShell)
      Hs-Source-Dirs: execute/shell
      Build-Depends: shell-utility >=0.0 && <0.2
    Else
      Hs-Source-Dirs: execute/tmp

  Exposed-Modules:
    Graphics.Gnuplot.Simple
    Graphics.Gnuplot.Time
    Graphics.Gnuplot.Advanced
    Graphics.Gnuplot.Display
    Graphics.Gnuplot.File
    Graphics.Gnuplot.Terminal
    Graphics.Gnuplot.Terminal.Default
    Graphics.Gnuplot.Terminal.PostScript
    Graphics.Gnuplot.Terminal.PNG
    Graphics.Gnuplot.Terminal.SVG
    Graphics.Gnuplot.Terminal.WXT
    Graphics.Gnuplot.Terminal.QT
    Graphics.Gnuplot.Terminal.X11
    Graphics.Gnuplot.Encoding
    Graphics.Gnuplot.Frame
    Graphics.Gnuplot.Frame.Option
    Graphics.Gnuplot.Frame.OptionSet
    Graphics.Gnuplot.Frame.OptionSet.Style
    Graphics.Gnuplot.Frame.OptionSet.Histogram
    Graphics.Gnuplot.Plot
    Graphics.Gnuplot.Plot.TwoDimensional
    Graphics.Gnuplot.Plot.ThreeDimensional
    Graphics.Gnuplot.Graph
    Graphics.Gnuplot.Graph.TwoDimensional
    Graphics.Gnuplot.Graph.ThreeDimensional
    Graphics.Gnuplot.LineSpecification
    Graphics.Gnuplot.ColorSpecification
    Graphics.Gnuplot.MultiPlot
    Graphics.Gnuplot.Value.Atom
    Graphics.Gnuplot.Value.Tuple
    Graphics.Gnuplot.Value.ColumnSet
  Other-Modules:
    Graphics.Gnuplot.Private.LineSpecification
    Graphics.Gnuplot.Private.ColorSpecification
    Graphics.Gnuplot.Private.Plot
    Graphics.Gnuplot.Private.Frame
    Graphics.Gnuplot.Private.FrameOption
    Graphics.Gnuplot.Private.FrameOptionSet
    Graphics.Gnuplot.Private.Graph
    Graphics.Gnuplot.Private.Graph2D
    Graphics.Gnuplot.Private.Graph3D
    Graphics.Gnuplot.Private.Graph2DType
    Graphics.Gnuplot.Private.Graph3DType
    Graphics.Gnuplot.Private.GraphEmpty
    Graphics.Gnuplot.Private.Terminal
    Graphics.Gnuplot.Private.Encoding
    Graphics.Gnuplot.Private.Display
    Graphics.Gnuplot.Private.File
    Graphics.Gnuplot.Private.Command
    Graphics.Gnuplot.Utility
    Graphics.Gnuplot.Execute

Executable gnuplot-demo
  If flag(buildExamples)
    Build-Depends:
      gnuplot,
      time,
      array,
      filepath,
      utility-ht,
      base
  Else
    Buildable: False
  Default-Language: Haskell98
  GHC-Options: -Wall
  Main-Is: src/Demo.hs
  Other-Modules: Paths_gnuplot
  Autogen-Modules: Paths_gnuplot
