cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.33.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 8c517de3588e995edfea529de9301f2fd844e674f8016c429fba633de9f4c864

name:           immortal-queue
version:        0.1.0.1
synopsis:       Build a pool of queue-processing worker threads.
description:    @immortal-queue@ is a library for build an asynchronous worker pool that
                processes action from a generic queue. You can use any thread-safe datatype
                with a push and pop like a @TQueue@ or a @persistent@ database table.
                .
                The worker pool is configured by building an @ImmortalQueue@ type, which
                describes how to push and pop from the queue as well as how to process
                items and handle errors.
                .
                For a simple usage example using a TQueue, see the module documentation.
                For a more complex example that uses a @persistent@ database as a queue,
                see
                <https://github.com/Southern-Exposure-Seed-Exchange/southernexposure.com/blob/develop/server/src/Workers.hs Southern Exposure's website code>.
category:       Concurrency
homepage:       https://github.com/prikhi/immortal-queue#readme
bug-reports:    https://github.com/prikhi/immortal-queue/issues
author:         Pavan Rikhi
maintainer:     pavan.rikhi@gmail.com
copyright:      2020 Pavan Rikhi
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    CHANGELOG.md

source-repository head
  type: git
  location: https://github.com/prikhi/immortal-queue

library
  exposed-modules:
      Control.Immortal.Queue
  other-modules:
      Paths_immortal_queue
  hs-source-dirs:
      src
  ghc-options: -Wall -O2
  build-depends:
      async >=2 && <3
    , base >=4.7 && <5
    , immortal <1 && >=0.2.1
  if impl(ghc >= 8.0)
    ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  else
    ghc-options: -fwarn-incomplete-record-updates -fwarn-incomplete-uni-patterns
  if impl(ghc < 8.0)
    build-depends:
        nats >=1 && <2
  default-language: Haskell2010

test-suite immortal-queue-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      MockQueue
      Paths_immortal_queue
  hs-source-dirs:
      tests
  ghc-options: -Wall -O2 -threaded -rtsopts -with-rtsopts "-N -T"
  build-depends:
      base >=4.7 && <5
    , immortal-queue
    , stm
    , tasty
    , tasty-hunit
  if impl(ghc >= 8.0)
    ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  else
    ghc-options: -fwarn-incomplete-record-updates -fwarn-incomplete-uni-patterns
  default-language: Haskell2010
