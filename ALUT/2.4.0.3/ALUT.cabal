name: ALUT
version: 2.4.0.3
synopsis: A binding for the OpenAL Utility Toolkit
description:
  A Haskell binding for the OpenAL Utility Toolkit, which makes
  managing of OpenAL contexts, loading sounds in various formats
  and creating waveforms very easy. For more information about the
  C library on which this binding is based, please see:
  <http://distro.ibiblio.org/rootlinux/rootlinux-ports/more/freealut/freealut-1.1.0/doc/alut.html>.
homepage: https://github.com/haskell-openal/ALUT
bug-reports: https://github.com/haskell-openal/ALUT/issues
copyright: Copyright (C) 2005-2016 Sven Panne
license: BSD3
license-file: LICENSE
author: Sven Panne
maintainer: Sven Panne <svenpanne@gmail.com>
category: Sound
build-type: Simple
tested-with:
  GHC == 7.0.4
  GHC == 7.2.2
  GHC == 7.4.2
  GHC == 7.6.3
  GHC == 7.8.4
  GHC == 7.10.3
  GHC == 8.0.2
  GHC == 8.2.2
  GHC == 8.4.3
  GHC == 8.6.5
  GHC == 8.8.1
cabal-version: >= 1.10
extra-source-files:
  CHANGELOG.md
  README.md
  examples/TestSuite/file1.wav
  examples/TestSuite/file2.au
  examples/TestSuite/file3.raw

flag UseNativeWindowsLibraries
  description:
    When compiling under Windows, use the native libraries instead of e.g. the
    ones coming with Cygwin.

flag BuildExamples
  description: Build various ALUT examples.
  default: False

library
  exposed-modules:
    Sound.ALUT
    Sound.ALUT.Initialization
    Sound.ALUT.Loaders
    Sound.ALUT.Sleep
    Sound.ALUT.Version
  other-modules:
    Sound.ALUT.Config
    Sound.ALUT.Constants
    Sound.ALUT.Errors
  hs-source-dirs: src
  ghc-options: -Wall
  if impl(ghc > 8)
    ghc-options: -Wcompat
  build-depends:
    base         >= 3   && < 5,
    transformers >= 0.2 && < 0.6,
    StateVar     >= 1.1 && < 1.3,
    OpenAL       >= 1.7 && < 1.8
  default-language: Haskell2010
  other-extensions: CPP
  if os(windows) && flag(UseNativeWindowsLibraries)
    if arch(i386)
      cpp-options: "-DCALLCONV=stdcall"
    else
      cpp-options: "-DCALLCONV=ccall"
    extra-libraries: alut
  else
    cpp-options: "-DCALLCONV=ccall"
    if os(ios)
      frameworks: ALUT
    else
      extra-libraries: alut

executable Basic-HelloWorld
  if !flag(BuildExamples)
    buildable: False
  main-is: HelloWorld.hs
  build-depends: base >= 3 && < 5, ALUT
  hs-source-dirs: examples/Basic
  default-language: Haskell2010
  ghc-options: -Wall

executable Basic-OpenALInfo
  if !flag(BuildExamples)
    buildable: False
  main-is: OpenALInfo.hs
  build-depends: base >= 3 && < 5, pretty, ALUT
  hs-source-dirs: examples/Basic
  default-language: Haskell2010
  ghc-options: -Wall

executable Basic-PlayFile
  if !flag(BuildExamples)
    buildable: False
  main-is: PlayFile.hs
  build-depends: base >= 3 && < 5, ALUT
  hs-source-dirs: examples/Basic
  default-language: Haskell2010
  ghc-options: -Wall

executable TestSuite-TestErrorStuff
  if !flag(BuildExamples)
    buildable: False
  main-is: TestErrorStuff.hs
  build-depends: base >= 3 && < 5, ALUT
  hs-source-dirs: examples/TestSuite
  default-language: Haskell2010
  ghc-options: -Wall

executable TestSuite-TestFileLoader
  if !flag(BuildExamples)
    buildable: False
  main-is: TestFileLoader.hs
  build-depends: base >= 3 && < 5, ALUT
  hs-source-dirs: examples/TestSuite
  default-language: Haskell2010
  ghc-options: -Wall

executable TestSuite-TestMemoryLoader
  if !flag(BuildExamples)
    buildable: False
  main-is: TestMemoryLoader.hs
  build-depends: base >= 3 && < 5, ALUT
  hs-source-dirs: examples/TestSuite
  default-language: Haskell2010
  ghc-options: -Wall

executable TestSuite-TestVersion
  if !flag(BuildExamples)
    buildable: False
  main-is: TestVersion.hs
  build-depends: base >= 3 && < 5, ALUT
  hs-source-dirs: examples/TestSuite
  default-language: Haskell2010
  ghc-options: -Wall

executable TestSuite-TestWaveforms
  if !flag(BuildExamples)
    buildable: False
  main-is: TestWaveforms.hs
  build-depends: base >= 3 && < 5, ALUT
  hs-source-dirs: examples/TestSuite
  default-language: Haskell2010
  ghc-options: -Wall

source-repository head
  type: git
  location: https://github.com/haskell-openal/ALUT.git
