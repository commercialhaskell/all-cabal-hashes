cabal-version:  2.2

name:           hw-fingertree
version:        0.1.0.2
synopsis:       Generic finger-tree structure, with example instances
description:    A general sequence representation with arbitrary
                annotations, for use as a base for implementations of
                various collection types, with examples, as described
                in section 4 of
                .
                * Ralf Hinze and Ross Paterson,
                \"Finger trees: a simple general-purpose data structure\",
                /Journal of Functional Programming/ 16:2 (2006) pp 197-217.
                <http://staff.city.ac.uk/~ross/papers/FingerTree.html>
                .
                For a tuned sequence type, see @Data.Sequence@ in the
                @containers@ package, which is a specialization of
                this structure.
category:       Data Structures
homepage:       https://github.com/haskell-works/hw-fingertree#readme
bug-reports:    https://github.com/haskell-works/hw-fingertree/issues
maintainer:     John Ky <newhoggy@gmail.com>
copyright:      (c) 2017-2019 John Ky
                (c) 2006 Ross Paterson, Ralf Hinze,
license:        BSD-3-Clause
license-file:   LICENSE
build-type:     Simple

common base                       { build-depends: base                       >= 4          && < 5      }

common deepseq                    { build-depends: deepseq                                              }
common hedgehog                   { build-depends: hedgehog                                             }
common hspec                      { build-depends: hspec                                                }
common hw-fingertree              { build-depends: hw-fingertree                                        }
common hw-hspec-hedgehog          { build-depends: hw-hspec-hedgehog                                    }

common config
  default-language: Haskell2010

source-repository head
  type: git
  location: https://github.com/haskell-works/hw-fingertree

library
  import:   base, config
          , deepseq
  hs-source-dirs:     src
  other-modules:      Paths_hw_fingertree
  autogen-modules:    Paths_hw_fingertree
  exposed-modules:
    HaskellWorks.Data.FingerTree
    HaskellWorks.Data.IntervalMap.FingerTree
    HaskellWorks.Data.PriorityQueue.FingerTree

test-suite hw-fingertree-tests
  import:   base, config
          , deepseq
          , hedgehog
          , hspec
          , hw-hspec-hedgehog
  build-depends:      hw-fingertree
  type:               exitcode-stdio-1.0
  main-is:            Spec.hs
  hs-source-dirs:     tests
  build-tools:        hspec-discover
  autogen-modules:    Paths_hw_fingertree
  other-modules:
    HaskellWorks.Data.FingerTree.Gen
    HaskellWorks.Data.FingerTreeSpec
    Paths_hw_fingertree
