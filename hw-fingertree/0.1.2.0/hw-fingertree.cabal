cabal-version: 2.2

name:                   hw-fingertree
version:                0.1.2.0
x-revision: 1
synopsis:               Generic finger-tree structure, with example instances
description:            A general sequence representation with arbitrary
                        annotations, for use as a base for implementations of
                        various collection types, with examples, as described
                        in section 4 of
                        .
                        * Ralf Hinze and Ross Paterson,
                        \"Finger trees: a simple general-purpose data structure\",
                        /Journal of Functional Programming/ 16:2 (2006) pp 197-217.
                        <http://staff.city.ac.uk/~ross/papers/FingerTree.html>
                        .
                        For a tuned sequence type, see @Data.Sequence@ in the
                        @containers@ package, which is a specialization of
                        this structure.
category:               Data Structures
homepage:               https://github.com/haskell-works/hw-fingertree#readme
bug-reports:            https://github.com/haskell-works/hw-fingertree/issues
maintainer:             John Ky <newhoggy@gmail.com>
copyright:              (c) 2017-2020 John Ky
                        (c) 2006 Ross Paterson, Ralf Hinze,
license:                BSD-3-Clause
license-file:           LICENSE
tested-with:            GHC == 8.10.1, GHC == 8.8.3, GHC == 8.6.5, GHC == 8.4.4
build-type:             Simple

source-repository head
  type: git
  location: https://github.com/haskell-works/hw-fingertree

common base                       { build-depends: base                       >= 4.11       && < 5      }

common deepseq                    { build-depends: deepseq                    >= 1.4        && < 1.5    }
common doctest                    { build-depends: doctest                    >= 0.16.2     && < 0.19   }
common doctest-discover           { build-depends: doctest-discover           >= 0.2        && < 0.3    }
common hedgehog                   { build-depends: hedgehog                   >= 0.6        && < 1.1    }
common hspec                      { build-depends: hspec                      >= 2.4        && < 3.0    }
common hw-hspec-hedgehog          { build-depends: hw-hspec-hedgehog          >= 0.1        && < 0.2    }
common hw-prim                    { build-depends: hw-prim                    >= 0.6.2.25   && < 0.7    }

common config
  default-language:     Haskell2010
  ghc-options:          -Wall

common hw-fingertree
  build-depends:        hw-fingertree

library
  import:               base, config
                      , deepseq
                      , hw-prim
  hs-source-dirs:       src
  other-modules:        Paths_hw_fingertree
  autogen-modules:      Paths_hw_fingertree
  exposed-modules:      HaskellWorks.Data.FingerTree
                        HaskellWorks.Data.IntervalMap.FingerTree
                        HaskellWorks.Data.PriorityQueue.FingerTree

test-suite hw-fingertree-tests
  import:               base, config
                      , deepseq
                      , hedgehog
                      , hspec
                      , hw-fingertree
                      , hw-hspec-hedgehog
  type:                 exitcode-stdio-1.0
  main-is:              Spec.hs
  hs-source-dirs:       tests
  build-tool-depends:   hspec-discover:hspec-discover
  other-modules:        HaskellWorks.Data.FingerTree.Gen
                        HaskellWorks.Data.FingerTreeSpec

test-suite doctest
  import:               base, config
                      , doctest
                      , doctest-discover
                      , hw-fingertree
  default-language:     Haskell2010
  type:                 exitcode-stdio-1.0
  ghc-options:          -threaded
  main-is:              DoctestDriver.hs
  HS-Source-Dirs:       doctest
  build-tool-depends:   doctest-discover:doctest-discover
