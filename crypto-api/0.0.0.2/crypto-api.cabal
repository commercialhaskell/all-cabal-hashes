name:           crypto-api
version:        0.0.0.2
x-revision: 1
license:        BSD3
license-file:   LICENSE
copyright:      Thomas DuBuisson <thomas.dubuisson@gmail.com>, Dominic Steinitz (see Data.LargeWord module)
author:         Thomas DuBuisson <thomas.dubuisson@gmail.com>, Dominic Steinitz
maintainer:     Thomas DuBuisson <thomas.dubuisson@gmail.com>
description:    A generic interface for cryptographic operations,
                platform independent quality RNG, property tests
                and known-answer tests (KATs) for common algorithms,
                and a basic benchmark infrastructure.

                Maintainers of hash and cipher implementations are
                encouraged to add instances for the classes defined
                in Crypto.Classes.  Crypto users are similarly
                encouraged to use the interfaces defined in the Classes
                module.

                Any concepts or functions of general use to more than
                one cryptographic algorithm (ex: padding) is within
                scope of this package.
synopsis:       A generic interface for cryptographic operations
category:       Data, Cryptography
stability:      stable
build-type:     Simple
cabal-version:  >= 1.6
tested-with:    GHC == 6.12.1
Data-Files: Test/KAT_AES/*.txt
extra-source-files:
        Test/KAT_AES/*.txt

flag tests
  description: Include Test.Crypto module for testing hash and cipher instances
  default: False

flag benchmarks
  description: Include benchmarking tools for cryptographic operations
  default: False

Library
  Build-Depends: base >= 4 && < 4.4,
                 bytestring >= 0.9 && < 0.10,
                 binary >= 0.4.0 && <0.6.0,
                 cereal >= 0.2 && <0.3,
                 tagged == 0.1.*,
                 random >= 1 && < 2,
                 filepath >= 1.1 && < 1.2
  ghc-options:   -O2
  hs-source-dirs:
  exposed-modules: Crypto.Classes, Crypto.Types, Crypto.HMAC, Data.LargeWord, Crypto.Modes, System.Crypto.Random, Crypto.Random
  if flag(tests)
    exposed-modules: Test.Crypto, Test.ParseNistKATs
    build-depends: QuickCheck >= 2.3 && < 2.4, parsec >= 3.1 && < 3.2, directory >= 1.0.1.0 && < 1.1
    other-modules: Paths_crypto_api
  if flag(benchmarks)
    exposed-modules: Benchmark.Crypto
    build-depends: criterion >= 0.5
