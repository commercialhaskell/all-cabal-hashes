Name: dhall
Version: 1.21.0
Cabal-Version: >=1.10
Build-Type: Simple
Tested-With: GHC == 7.10.3, GHC == 8.4.3, GHC == 8.6.1
License: BSD3
License-File: LICENSE
Copyright: 2017 Gabriel Gonzalez
Author: Gabriel Gonzalez
Maintainer: Gabriel439@gmail.com
Bug-Reports: https://github.com/dhall-lang/dhall-haskell/issues
Synopsis: A configuration language guaranteed to terminate
Description:
    Dhall is an explicitly typed configuration language that is not Turing
    complete.  Despite being Turing incomplete, Dhall is a real programming
    language with a type-checker and evaluator.
    .
    Use this library to parse, type-check, evaluate, and pretty-print the Dhall
    configuration language.  This package also includes an executable which
    type-checks a Dhall file and reduces the file to a fully evaluated normal
    form.
    .
    Read "Dhall.Tutorial" to learn how to use this library
Category: Compiler
Extra-Source-Files:
    benchmark/deep-nested-large-record/*.dhall
    benchmark/examples/*.dhall
    CHANGELOG.md
    dhall-lang/Prelude/Bool/and
    dhall-lang/Prelude/Bool/build
    dhall-lang/Prelude/Bool/even
    dhall-lang/Prelude/Bool/fold
    dhall-lang/Prelude/Bool/not
    dhall-lang/Prelude/Bool/odd
    dhall-lang/Prelude/Bool/or
    dhall-lang/Prelude/Bool/package.dhall
    dhall-lang/Prelude/Bool/show
    dhall-lang/Prelude/Double/package.dhall
    dhall-lang/Prelude/Double/show
    dhall-lang/Prelude/Function/compose
    dhall-lang/Prelude/Function/package.dhall
    dhall-lang/Prelude/Integer/package.dhall
    dhall-lang/Prelude/Integer/show
    dhall-lang/Prelude/Integer/toDouble
    dhall-lang/Prelude/JSON/keyText
    dhall-lang/Prelude/JSON/keyValue
    dhall-lang/Prelude/JSON/Nesting
    dhall-lang/Prelude/JSON/package.dhall
    dhall-lang/Prelude/JSON/Tagged
    dhall-lang/Prelude/List/all
    dhall-lang/Prelude/List/any
    dhall-lang/Prelude/List/build
    dhall-lang/Prelude/List/concat
    dhall-lang/Prelude/List/concatMap
    dhall-lang/Prelude/List/filter
    dhall-lang/Prelude/List/fold
    dhall-lang/Prelude/List/generate
    dhall-lang/Prelude/List/head
    dhall-lang/Prelude/List/indexed
    dhall-lang/Prelude/List/iterate
    dhall-lang/Prelude/List/last
    dhall-lang/Prelude/List/length
    dhall-lang/Prelude/List/map
    dhall-lang/Prelude/List/null
    dhall-lang/Prelude/List/package.dhall
    dhall-lang/Prelude/List/replicate
    dhall-lang/Prelude/List/reverse
    dhall-lang/Prelude/List/shifted
    dhall-lang/Prelude/List/unzip
    dhall-lang/Prelude/Monoid
    dhall-lang/Prelude/Natural/build
    dhall-lang/Prelude/Natural/enumerate
    dhall-lang/Prelude/Natural/even
    dhall-lang/Prelude/Natural/fold
    dhall-lang/Prelude/Natural/isZero
    dhall-lang/Prelude/Natural/odd
    dhall-lang/Prelude/Natural/package.dhall
    dhall-lang/Prelude/Natural/product
    dhall-lang/Prelude/Natural/show
    dhall-lang/Prelude/Natural/sum
    dhall-lang/Prelude/Natural/toDouble
    dhall-lang/Prelude/Natural/toInteger
    dhall-lang/Prelude/Optional/all
    dhall-lang/Prelude/Optional/any
    dhall-lang/Prelude/Optional/build
    dhall-lang/Prelude/Optional/concat
    dhall-lang/Prelude/Optional/filter
    dhall-lang/Prelude/Optional/fold
    dhall-lang/Prelude/Optional/head
    dhall-lang/Prelude/Optional/last
    dhall-lang/Prelude/Optional/length
    dhall-lang/Prelude/Optional/map
    dhall-lang/Prelude/Optional/null
    dhall-lang/Prelude/Optional/package.dhall
    dhall-lang/Prelude/Optional/toList
    dhall-lang/Prelude/Optional/unzip
    dhall-lang/Prelude/package.dhall
    dhall-lang/Prelude/Text/concat
    dhall-lang/Prelude/Text/concatMap
    dhall-lang/Prelude/Text/concatMapSep
    dhall-lang/Prelude/Text/concatSep
    dhall-lang/Prelude/Text/package.dhall
    dhall-lang/Prelude/Text/show
    dhall-lang/tests/import/data/fieldOrder/*.dhall
    dhall-lang/tests/import/failure/*.dhall
    dhall-lang/tests/import/success/*.dhall
    dhall-lang/tests/normalization/success/*.dhall
    dhall-lang/tests/normalization/success/haskell-tutorial/access/*.dhall
    dhall-lang/tests/normalization/success/haskell-tutorial/combineTypes/*.dhall
    dhall-lang/tests/normalization/success/haskell-tutorial/prefer/*.dhall
    dhall-lang/tests/normalization/success/haskell-tutorial/projection/*.dhall
    dhall-lang/tests/normalization/success/multiline/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/and/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/and/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/build/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/build/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/even/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/even/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/fold/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/fold/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/not/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/not/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/odd/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/odd/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/or/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/or/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/show/*.dhall
    dhall-lang/tests/normalization/success/prelude/Bool/show/*.dhall
    dhall-lang/tests/normalization/success/prelude/Double/show/*.dhall
    dhall-lang/tests/normalization/success/prelude/Double/show/*.dhall
    dhall-lang/tests/normalization/success/prelude/Integer/show/*.dhall
    dhall-lang/tests/normalization/success/prelude/Integer/show/*.dhall
    dhall-lang/tests/normalization/success/prelude/Integer/toDouble/*.dhall
    dhall-lang/tests/normalization/success/prelude/Integer/toDouble/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/all/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/all/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/any/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/any/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/build/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/build/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/concat/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/concat/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/concatMap/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/concatMap/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/filter/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/filter/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/fold/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/fold/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/generate/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/generate/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/head/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/head/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/indexed/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/indexed/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/iterate/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/iterate/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/last/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/last/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/length/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/length/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/map/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/map/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/null/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/null/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/replicate/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/replicate/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/reverse/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/reverse/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/shifted/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/shifted/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/unzip/*.dhall
    dhall-lang/tests/normalization/success/prelude/List/unzip/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/build/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/build/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/enumerate/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/enumerate/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/even/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/even/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/fold/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/fold/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/isZero/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/isZero/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/odd/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/odd/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/product/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/product/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/show/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/show/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/sum/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/sum/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/toDouble/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/toDouble/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/toInteger/*.dhall
    dhall-lang/tests/normalization/success/prelude/Natural/toInteger/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/all/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/all/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/any/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/any/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/build/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/build/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/concat/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/concat/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/filter/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/filter/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/fold/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/fold/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/head/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/head/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/last/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/last/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/length/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/length/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/map/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/map/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/null/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/null/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/toList/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/toList/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/unzip/*.dhall
    dhall-lang/tests/normalization/success/prelude/Optional/unzip/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/concat/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/concat/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/concatMap/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/concatMap/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/concatMapSep/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/concatMapSep/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/concatSep/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/concatSep/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/show/*.dhall
    dhall-lang/tests/normalization/success/prelude/Text/show/*.dhall
    dhall-lang/tests/normalization/success/simple/*.dhall
    dhall-lang/tests/normalization/success/simplifications/*.dhall
    dhall-lang/tests/parser/failure/*.dhall
    dhall-lang/tests/parser/success/*.dhall
    dhall-lang/tests/parser/success/*.dhallb
    dhall-lang/tests/typecheck/failure/*.dhall
    dhall-lang/tests/typecheck/success/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/and/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/and/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/build/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/build/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/even/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/even/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/fold/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/fold/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/not/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/not/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/odd/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/odd/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/or/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/or/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/show/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Bool/show/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Double/show/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Double/show/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Integer/show/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Integer/show/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Integer/toDouble/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Integer/toDouble/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/all/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/all/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/any/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/any/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/build/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/build/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/concat/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/concat/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/concatMap/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/concatMap/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/filter/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/filter/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/fold/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/fold/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/generate/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/generate/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/head/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/head/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/indexed/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/indexed/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/iterate/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/iterate/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/last/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/last/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/length/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/length/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/map/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/map/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/null/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/null/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/replicate/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/replicate/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/reverse/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/reverse/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/shifted/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/shifted/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/unzip/*.dhall
    dhall-lang/tests/typecheck/success/prelude/List/unzip/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Monoid/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/build/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/build/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/enumerate/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/enumerate/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/even/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/even/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/fold/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/fold/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/isZero/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/isZero/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/odd/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/odd/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/product/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/product/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/show/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/show/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/sum/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/sum/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/toDouble/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/toDouble/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/toInteger/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Natural/toInteger/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/all/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/all/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/any/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/any/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/build/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/build/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/concat/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/concat/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/filter/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/filter/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/fold/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/fold/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/head/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/head/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/last/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/last/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/length/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/length/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/map/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/map/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/null/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/null/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/toList/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/toList/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/unzip/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Optional/unzip/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Text/concat/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Text/concat/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Text/concatMap/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Text/concatMap/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Text/concatMapSep/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Text/concatMapSep/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Text/concatSep/*.dhall
    dhall-lang/tests/typecheck/success/prelude/Text/concatSep/*.dhall
    dhall-lang/tests/typecheck/success/simple/access/*.dhall
    dhall-lang/tests/typecheck/success/simple/*.dhall
    tests/format/*.dhall
    tests/lint/success/*.dhall
    tests/regression/*.dhall
    tests/tutorial/*.dhall

Source-Repository head
    Type: git
    Location: https://github.com/dhall-lang/dhall-haskell/tree/master/dhall

Flag with-http
  Description: Include support for importing dhall modules from HTTP URLs
  Default:     True
  Manual:      True

Library
    Hs-Source-Dirs: src
    Build-Depends:
        base                        >= 4.8.2.0  && < 5   ,
        aeson                       >= 1.0.0.0  && < 1.5 ,
        aeson-pretty                               < 0.9 ,
        ansi-terminal               >= 0.6.3.1  && < 0.10,
        bytestring                                 < 0.11,
        case-insensitive                           < 1.3 ,
        cborg                       >= 0.2.0.0  && < 0.3 ,
        cborg-json                                 < 0.3 ,
        containers                  >= 0.5.0.0  && < 0.7 ,
        contravariant                              < 1.6 ,
        cryptonite                  >= 0.23     && < 1.0 ,
        Diff                        >= 0.2      && < 0.4 ,
        directory                   >= 1.2.2.0  && < 1.4 ,
        dotgen                      >= 0.4.2    && < 0.5 ,
        exceptions                  >= 0.8.3    && < 0.11,
        filepath                    >= 1.4      && < 1.5 ,
        haskeline                   >= 0.7.2.1  && < 0.8 ,
        lens-family-core            >= 1.0.0    && < 1.3 ,
        megaparsec                  >= 7.0.0    && < 7.1 ,
        memory                      >= 0.14     && < 0.15,
        mtl                         >= 2.2.1    && < 2.3 ,
        optparse-applicative        >= 0.14.0.0 && < 0.15,
        parsers                     >= 0.12.4   && < 0.13,
        prettyprinter               >= 1.2.0.1  && < 1.3 ,
        prettyprinter-ansi-terminal >= 1.1.1    && < 1.2 ,
        repline                     >= 0.2.0.0  && < 0.3 ,
        serialise                   >= 0.2.0.0  && < 0.3 ,
        scientific                  >= 0.3.0.0  && < 0.4 ,
        template-haskell                           < 2.15,
        text                        >= 0.11.1.0 && < 1.3 ,
        transformers                >= 0.2.0.0  && < 0.6 ,
        unordered-containers        >= 0.1.3.0  && < 0.3 ,
        uri-encode                                 < 1.6 ,
        vector                      >= 0.11.0.0 && < 0.13
    if flag(with-http)
      Build-Depends:
        http-types                  >= 0.7.0    && < 0.13,
        http-client                 >= 0.4.30   && < 0.7 ,
        http-client-tls             >= 0.2.0    && < 0.4
    if !impl(ghc >= 8.0) && !impl(eta >= 0.8.4)
      Build-Depends: semigroups == 0.18.*
      Build-Depends: transformers == 0.4.2.*
      Build-Depends: fail == 4.9.*
    if impl(ghcjs)
      Build-Depends: ghcjs-xhr

    Exposed-Modules:
        Dhall,
        Dhall.Binary,
        Dhall.Context,
        Dhall.Core,
        Dhall.Diff,
        Dhall.Format,
        Dhall.Freeze,
        Dhall.Hash,
        Dhall.Import,
        Dhall.Lint,
        Dhall.Main,
        Dhall.Map,
        Dhall.Set,
        Dhall.Parser,
        Dhall.Pretty,
        Dhall.Repl,
        Dhall.TH,
        Dhall.Tutorial,
        Dhall.TypeCheck
    Other-Modules:
        Dhall.Pretty.Internal,
        Dhall.Parser.Expression,
        Dhall.Parser.Combinators,
        Dhall.Parser.Token,
        Dhall.Import.Types,
        Dhall.Util,
        Paths_dhall
    if flag(with-http)
      Other-Modules:
        Dhall.Import.HTTP

    GHC-Options: -Wall -fwarn-incomplete-uni-patterns
    Default-Language: Haskell2010

Executable dhall
    Hs-Source-Dirs: dhall
    Main-Is: Main.hs
    Build-Depends: base, dhall
    GHC-Options: -Wall -rtsopts
    Default-Language: Haskell2010

Test-Suite tasty
    Type: exitcode-stdio-1.0
    Hs-Source-Dirs: tests
    Main-Is: Dhall/Test/Main.hs
    GHC-Options: -Wall
    Other-Modules:
        Dhall.Test.Dhall
        Dhall.Test.Format
        Dhall.Test.Import
        Dhall.Test.Lint
        Dhall.Test.Normalization
        Dhall.Test.Parser
        Dhall.Test.QuickCheck
        Dhall.Test.Regression
        Dhall.Test.Tutorial
        Dhall.Test.TypeCheck
        Dhall.Test.Util
    Build-Depends:
        base                      >= 4        && < 5   ,
        bytestring                               < 0.11,
        cborg                     >= 0.2.0.0  && < 0.3 ,
        containers                                     ,
        deepseq                   >= 1.2.0.1  && < 1.5 ,
        dhall                                          ,
        directory                                      ,
        filepath                                       ,
        prettyprinter                                  ,
        QuickCheck                >= 2.10     && < 2.13,
        quickcheck-instances      >= 0.3.12   && < 0.4 ,
        serialise                                      ,
        tasty                     >= 0.11.2   && < 1.3 ,
        tasty-hunit               >= 0.9.2    && < 0.11,
        tasty-quickcheck          >= 0.9.2    && < 0.11,
        text                      >= 0.11.1.0 && < 1.3 ,
        transformers                                   ,
        vector                    >= 0.11.0.0 && < 0.13
    Default-Language: Haskell2010

Test-Suite doctest
    Type: exitcode-stdio-1.0
    Hs-Source-Dirs: doctest
    Main-Is: Main.hs
    GHC-Options: -Wall
    Build-Depends:
        base                          ,
        directory                     ,
        filepath                < 1.5 ,
        mockery                 < 0.4 ,
        doctest   >= 0.7.0   && < 0.17
    Default-Language: Haskell2010
    -- `doctest` doesn't work with `MIN_VERSION` macros before GHC 8
    --
    --  See: https://ghc.haskell.org/trac/ghc/ticket/10970
    if impl(ghc < 8.0)
      Buildable: False

Benchmark dhall-parser
    Type: exitcode-stdio-1.0
    Hs-Source-Dirs: benchmark/parser
    Main-Is: Main.hs
    Build-Depends:
        base                      >= 4        && < 5  ,
        bytestring                                    ,
        containers                >= 0.5.0.0  && < 0.7,
        criterion                 >= 1.1      && < 1.6,
        dhall                                         ,
        directory                                     ,
        serialise                                     ,
        text                      >= 0.11.1.0 && < 1.3
    Default-Language: Haskell2010
    ghc-options: -rtsopts

Benchmark deep-nested-large-record
    Type: exitcode-stdio-1.0
    Hs-Source-Dirs: benchmark/deep-nested-large-record
    Main-Is: Main.hs
    Build-Depends:
        base                      >= 4        && < 5  ,
        containers                >= 0.5.0.0  && < 0.7,
        criterion                 >= 1.1      && < 1.6,
        dhall
    Default-Language: Haskell2010

Benchmark dhall-command
    Type: exitcode-stdio-1.0
    Main-Is: Main.hs
    Hs-Source-Dirs: benchmark/dhall-command
    Build-Depends:
        base                      >= 4        && < 5  ,
        dhall
    Default-Language: Haskell2010
    ghc-options: -rtsopts -O2

Benchmark map-operations
    Type: exitcode-stdio-1.0
    Main-Is: Main.hs
    Hs-Source-Dirs: benchmark/map
    Build-Depends:
        base                      >= 4        && < 5  ,
        criterion                 >= 1.1      && < 1.6,
        dhall
    Default-Language: Haskell2010
--    ghc-options: -rtsopts -O2
