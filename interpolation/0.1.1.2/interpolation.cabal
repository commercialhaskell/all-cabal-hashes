Cabal-Version:    2.2
Name:             interpolation
Version:          0.1.1.2
License:          BSD-3-Clause
License-File:     LICENSE
Author:           Henning Thielemann
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         https://hub.darcs.net/thielema/interpolation/
Category:         Math
Synopsis:         piecewise linear and cubic Hermite interpolation
Description:
  Represent real functions by linear or cubic polynomial segments.
  The package provides both data structures
  for efficient lookup of interpolation intervals,
  and computation of basis functions.
  .
  There are two examples that can be built with
  .
  > cabal install -fbuildExamples
  .
  * @example/Plot.hs@:
    Interpolate a sinus curve using piecewise linear interpolation
    and piecewise Hermite cubic interpolation.
    For the latter one we provide the derivatives of the sinus function
    at the interpolation nodes.
  .
  * @example/Fit.hs@:
    Demonstrates how to use the basis functions
    for fitting an interpolation function to a given function
    using a linear least squares solver like @<\>@ from @lapack@.
    We use a distorted sinus as target.
  .
  The package needs only Haskell 98.
  Most of the package dependencies are only needed for the examples
  and are only installed if you enable to build them.
Tested-With:      GHC==7.4.2, GHC==7.6.3, GHC==7.8.4, GHC==7.10.1
Build-Type:       Simple
Extra-Source-Files:
  ChangeLog
  Makefile
  test-module.list

Flag buildExamples
  description: Build example executables
  default:     False

Flag lapack
  description: Build examples that depend on lapack
  default:     True

Source-Repository this
  Tag:         0.1.1.2
  Type:        darcs
  Location:    https://hub.darcs.net/thielema/interpolation/

Source-Repository head
  Type:        darcs
  Location:    https://hub.darcs.net/thielema/interpolation/

Library
  Build-Depends:
    utility-ht >=0.0.1 && <0.1,
    base >=4 && <5

  GHC-Options:      -Wall
  Hs-Source-Dirs:   src, private
  Default-Language: Haskell98
  Exposed-Modules:
    Numeric.Interpolation.NodeList
    Numeric.Interpolation.Piece
    Numeric.Interpolation.Piecewise
    Numeric.Interpolation.Type
    Numeric.Interpolation.Basis
    Numeric.Interpolation.Basis.Compact
    Numeric.Interpolation.Basis.Full
    Numeric.Interpolation.Sample
  Other-Modules:
    Numeric.Interpolation.Private.Piece
    Numeric.Interpolation.Private.Basis
    Numeric.Interpolation.Private.List

Executable interpolation-plot
  Main-Is:             Plot.hs
  Other-Modules:       Plot2DExtra
  Hs-Source-Dirs:      example
  GHC-Options:         -Wall
  Default-Language:    Haskell98
  If flag(buildExamples)
    Build-Depends:
      interpolation,
      gnuplot >=0.5.6 && <0.6,
      utility-ht >=0.0.9 && <0.1,
      base >=4.5 && <5
  Else
    Buildable: False

Executable interpolation-fit
  Main-Is:             Fit.hs
  Other-Modules:       Plot2DExtra
  Hs-Source-Dirs:      example
  GHC-Options:         -Wall
  Default-Language:    Haskell98
  If flag(buildExamples) && flag(lapack)
    Build-Depends:
      interpolation,
      lapack >=0.4 && <0.5,
      tfp >=1.0 && <1.1,
      comfort-array-shape >=0.0 && <0.1,
      comfort-array >=0.5.1 && <0.6,
      random >=1.0 && <1.2,
      gnuplot >=0.5.6 && <0.6,
      utility-ht >=0.0.9 && <0.1,
      base >=4.5 && <5
  Else
    Buildable: False

Test-Suite interpolation-test
  Type:                exitcode-stdio-1.0
  Main-Is:             Test.hs
  Other-Modules:
    Test.Numeric.Interpolation.Type
    Test.Numeric.Interpolation.NodeList
    Test.Numeric.Interpolation.Piece
    Test.Numeric.Interpolation.Piecewise
    Numeric.Interpolation.Private.Piece
  Hs-Source-Dirs:      test, private
  GHC-Options:         -Wall
  Default-Language:    Haskell98
  Build-Depends:
    interpolation,
    doctest-exitcode-stdio >=0.0 && <0.1,
    doctest-lib >=0.1 && <0.2,
    QuickCheck >=2.4 && <3,
    utility-ht >=0.0.9 && <0.1,
    array >=0.4 && <0.6,
    containers >=0.4 && <0.7,
    base >=4.5 && <5
