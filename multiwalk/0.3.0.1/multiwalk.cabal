cabal-version:   3.0

-- The cabal-version field refers to the version of the .cabal specification,
-- and can be different from the cabal-install (the tool) version and the
-- Cabal (the library) version you are using. As such, the Cabal (the library)
-- version used must be equal or greater than the version stated in this field.
-- Starting from the specification version 2.2, the cabal-version field must be
-- the first thing in the cabal file.

-- Initial package description 'multiwalk' generated by
-- 'cabal init'. For further documentation, see:
--   http://haskell.org/cabal/users-guide/
--
-- The name of the package.
name:            multiwalk

-- The package version.
-- See the Haskell package versioning policy (PVP) for standards
-- guiding when and how versions should be incremented.
-- https://pvp.haskell.org
-- PVP summary:     +-+------- breaking API changes
--                  | | +----- non-breaking API additions
--                  | | | +--- code changes with no API change
version:         0.3.0.1

-- A short (one-line) description of the package.
synopsis:
  Traverse data types via generics, acting on multiple types simultaneously.

-- A longer description of the package.
description:
  This library provides functionality for traversing data types recursively,
  acting on multiple types during the same traversal. In spirit, it is similar to
  the Walk type class from Pandoc.Walk, but generalizes it by allowing
  multiple types to be targeted by the traversal. In general, it only
  requires an Applicative constraint on the action, making it suitable for
  situations where you don't have a Monad.

-- The license under which the package is released.
license:         GPL-3.0-or-later

-- The file containing the license text.
license-file:    LICENSE

-- The package author(s).
author:          Lucas V. R.

-- An email address to which users can send suggestions, bug reports, and patches.
maintainer:      @lucasvr:matrix.org

-- A copyright notice.
-- copyright:
category:        Control
build-type:      Simple

-- Extra doc files to be distributed with the package, such as a CHANGELOG or a README.
extra-doc-files:
  CHANGELOG.md
  README.md

-- Extra source files to be distributed with the package, such as examples, or a tutorial module.
-- extra-source-files:

source-repository head
  type:     git
  location: https://github.com/lucasvreis/multiwalk

common common-options
  ghc-options:        -Wall -fprint-potential-instances
  default-extensions:
    AllowAmbiguousTypes
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveGeneric
    FlexibleContexts
    FlexibleInstances
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    ScopedTypeVariables
    TypeApplications
    TypeFamilies
    TypeOperators
    UndecidableInstances

library
  import:           common-options

  -- Modules exported by the library.
  exposed-modules:
    Control.MultiWalk
    Control.MultiWalk.Contains
    Control.MultiWalk.HasSub

  -- Modules included in this library but not exported.
  -- other-modules:

  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:

  -- Other library packages from which modules are imported.
  build-depends:    base >=4.16 && <4.19

  -- Directories containing source files.
  hs-source-dirs:   src

  -- Base language which the package is written in.
  default-language: Haskell2010

test-suite multiwalk-test
  import:           common-options

  -- Base language which the package is written in.
  default-language: Haskell2010

  -- Modules included in this executable, other than Main.
  -- other-modules:

  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:

  -- The interface type and version of the test suite.
  type:             exitcode-stdio-1.0

  -- Directories containing source files.
  hs-source-dirs:   test

  -- The entrypoint to the test suite.
  main-is:          Main.hs

  -- Test dependencies.
  build-depends:
    , base
    , multiwalk
    , tasty        >=1.4.3  && <1.5
    , tasty-hunit  >=0.10.0 && <0.11

benchmark bench
  import:           common-options
  hs-source-dirs:   test
  main-is:          Benchmark.hs
  type:             exitcode-stdio-1.0
  build-depends:
    , base
    , bytestring         >=0.11.4 && <0.12
    , commonmark         >=0.2.2  && <0.3
    , commonmark-pandoc  >=0.2.1  && <0.3
    , deepseq            >=1.4.6  && <1.5
    , multiwalk
    , pandoc-types       >=1.23   && <1.24
    , tasty
    , tasty-bench        >=0.3.3  && <0.4
    , tasty-hunit
    , text               >=1.2.5  && <2.1
    , transformers       >=0.5.6  && <0.7

  ghc-options:      "-with-rtsopts=-A32m --nonmoving-gc"
  default-language: Haskell2010
