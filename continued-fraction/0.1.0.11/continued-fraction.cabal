cabal-version: 1.18
name: continued-fraction
version: 0.1.0.11
license: BSD3
license-file: LICENSE
copyright: Copyright: (c) 2018 Vanessa McHale
maintainer: vamchale@gmail.com
author: Vanessa McHale
bug-reports: https://hub.darcs.net/vmchale/continued-fraction/issues
synopsis: Types and functions for working with continued fractions in Haskell
description:
    This package provides facilities for working with both continued fractions
    and rational approximants. It uses lists internally, so it may not be suitable
    if you need large convergents.
category: Math
build-type: Simple
extra-source-files:
    stack.yaml
    cabal.project.local
extra-doc-files: README.md
                 CHANGELOG.md

source-repository head
    type: darcs
    location: https://hub.darcs.net/vmchale/continued-fraction

flag development
    description:
        Enable `-Werror`
    default: False
    manual: True

library
    exposed-modules:
        Num.ContinuedFraction
    hs-source-dirs: src
    default-language: Haskell2010
    ghc-options: -Wall
    build-depends:
        base >=4.8 && <5,
        recursion >=1.1.0.0
    
    if flag(development)
        ghc-options: -Werror
    
    if !impl(ghc >=8.0)
        build-depends:
            semigroups -any
    
    if impl(ghc >=8.0)
        ghc-options: -Wincomplete-uni-patterns -Wincomplete-record-updates

test-suite continued-fractions-test
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: test
    default-language: Haskell2010
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall
    build-depends:
        base -any,
        continued-fraction -any,
        hspec -any
    
    if flag(development)
        ghc-options: -Werror
    
    if impl(ghc >=8.0)
        ghc-options: -Wincomplete-uni-patterns -Wincomplete-record-updates

benchmark continued-fractions-bench
    type: exitcode-stdio-1.0
    main-is: Bench.hs
    hs-source-dirs: bench
    default-language: Haskell2010
    ghc-options: -Wall
    build-depends:
        base -any,
        continued-fraction -any,
        criterion -any
    
    if flag(development)
        ghc-options: -Werror
    
    if impl(ghc >=8.0)
        ghc-options: -Wincomplete-uni-patterns -Wincomplete-record-updates
